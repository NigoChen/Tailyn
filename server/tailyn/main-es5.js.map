{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-guard.guard.ts","webpack:///src/app/auth/child.guard.ts","webpack:///src/app/auth/leave.guard.ts","webpack:///src/app/bootstrap/bootstrap.module.ts","webpack:///src/app/components/alert/alert.component.ts","webpack:///src/app/components/alert/alert.component.html","webpack:///src/app/components/content-header/content-header.component.ts","webpack:///src/app/components/content-header/content-header.component.html","webpack:///src/app/components/dashboard-routing.module.ts","webpack:///src/app/components/dashboard.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/employee/employee.component.ts","webpack:///src/app/components/employee/employee.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/loading/loading.component.ts","webpack:///src/app/components/loading/loading.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/repair/repair.component.ts","webpack:///src/app/components/repair/repair.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/tutorial/tutorial.component.ts","webpack:///src/app/components/tutorial/tutorial.component.html","webpack:///src/app/components/work/work.component.ts","webpack:///src/app/components/work/work.component.html","webpack:///src/app/configs/url.config.ts","webpack:///src/app/directives/alerts.directive.ts","webpack:///src/app/helps/error.interceptor.ts","webpack:///src/app/methods/input-validators.ts","webpack:///src/app/methods/password-Match-Validator.ts","webpack:///src/app/pipes/splite.pipe.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/services/repair.service.ts","webpack:///src/app/services/stand.service.ts","webpack:///src/app/services/work-hours.service.ts","webpack:///src/app/shard/shard.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","canActivateChild","canDeactivate","loadChildren","m","DashboardModule","routerOptions","useHash","anchorScrolling","scrollPositionRestoration","scrollOffset","AppRoutingModule","forRoot","imports","AppComponent","loadingService","router","loading_val","app_Loading","get_App_Loading","subscribe","res","changes","unsubscribe","event","console","log","onActivate","onDeactivate","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","loginService","route","state","user","read_User_SessionStorage","Object","length","navigate","ChildGuard","childRoute","set_Dashboard_Loading","e_Lv","logout","LeaveGuard","currentRoute","currentState","window","confirm","providedIn","BootstrapModule","AlertComponent","status","types","messages","ContentHeaderComponent","modalService","activatedRoute","get_User_Profile","get_FormGroup","fbGroup","searchText","delayTime","check_Active_Roueter","values","value","set_modal","show","size","set_Read","setTimeout","set_Search","snapshot","firstChild","routeConfig","check_Lv","events","pipe","url","fb_Value_Index","entries","key","val","e_JobNumber","read","search","data","title","icon","DashboardRoutingModule","forChild","DashboardComponent","dashboard_Loading","get_Dashboard_Loading","is_Loading","user_Session","set_User_Profile","EmployeeComponent","employeeService","fb","alertService","ngbRatingConfig","inputValidators","errorValidators","page","pageSize","max","readonly","default_FormGroup","result_Data","result_List","modal_Service","set_FormGroup","set_Form","form_","group","e_Id","e_Name","required","pattern","e_Email","maxLength","e_PassWord","e_ConfirmPassword","e_Date","array","control","updateOn","validators","reset_FormArray_Val","get_modal","reset_FormGroup","get_Search","get_Create","create","get_Read","get_Update","update","get_Delete","controls","reset","fb_Value","setValidators","updateValueAndValidity","employee","userData","find","item","index","undefined","create_User_SessionStorage","fg","next","set_Alert","error","err","complete","user_Profile","table_List_Sort","refreshResult_List","filter","term","toLowerCase","includes","map","country","i","slice","name","isAsc","sort","a","b","patchValue","isDisabled","lv_validators","validator","setControl","disabled","job_validators","set_FormArray_Val","dataArray","split","get","today","Date","toISOString","onValue_Check","datetim_Replace","onDate_Check","replace","substring","timestamp","datetime","choose_Value","dateTime_Count","start","end","total","Math","abs","year","month","toString","toFixed","$event","ErrorComponent","FooterComponent","HeaderComponent","sideBar_Show","w","document","documentElement","clientWidth","h","clientHeight","HomeComponent","chart_Line","LoadingComponent","LoginComponent","componentFactoryResolver","progressbar_View","progressbar_Type","progressbar_Value","jNumber","passWord","minLength","newPassWord","email","forms","account","system","ip","counter","read_Time_SessionStorage","reset_Status","clearValidators","user_Ip","userIP","progressbar_Show","get_Email","iscounter","send_Email","login","set_App_Loading","location","reload","create_Time_SessionStorage","reset_Forms","create_Time_Delay","get_IP","new_PassWord","onSubmit","toggle_Form","ModalComponent","ngbModal","config","vref","elementRef","_viewContainerRef","backdrop","keyboard","open","modalForm","backdropClass","windowClass","modalSM","close","get_Form","form","get_Alert","alerts","dismissAll","clear_Alert","parseInt","set_Delete","valid","set_Update","set_Create","RepairComponent","repairService","r_Id","r_JobNumber","r_SerialNumber","r_WorkOrder","r_Model","r_Error","r_Process","r_Status","r_Client","r_Date","r_Dates","r_Minutes","r_MTotal","reset_FormArray","forEach","date","array_Name","removeAt","push","formArray","dates","total_Minutes","minutes","Number","indexOf","set_FormArray","result","reduce","hasError","SidebarComponent","form_Controls","menu_Link_Style","navLink","nativeElement","querySelectorAll","classList","add","remove","set_FormGroup_Val","dateString","date_validators","show_Modal","TutorialComponent","WorkComponent","workHoursService","standService","calendar","decimalPipe","getTimezoneOffset","dateTime","now","dateTime_Min","setDate","getDate","dateTime_Max","standList$","w_Id","w_JobNumber","w_BMinute","w_OMinute","w_WorkOrder","w_Model","w_Stand","w_Quantity","w_Remark","w_Date","w_BTotal","w_OTotal","w_BDeduct","w_ODeduct","check_Minutes_TotalInt","s_Code","s_Title","deduct","dateTime_Total","days","hours","floor","getTime","bMinutes","oMinutes","bTotalInt","oTotalInt","url_Server","Urls","findOne","findLike","updatePassword","concat","workHours","repair","stand","rma","recycle","AlertsDirective","viewContainerRef","ErrorInterceptor","request","handle","message","statusText","ErrorValidators","Reset_Validators","num","fbArray","splice","InputValidators","touched","errorKey","errors","otherErrorKey","fbControls","replaceVal","passwordMatchValidator","password","confirmPassword","passWordMatch","SplitePipe","AlertService","type","asObservable","EmployeeService","http","errorResponse","ErrorEvent","handleError","jString","JSON","stringify","post","put","LoadingService","is_Login","LoginService","delete_Time_SessionStorage","delete_User_SessionStorage","date_","setMinutes","getMinutes","time_","sessionStorage","setItem","btoa","getItem","now_date","atob","removeItem","old_User","parse","ModalService","modal","formGroup","templateRef","RepairService","StandService","Stand","WorkHoursService","ShardModule","provide","useClass","multi","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AuthGuard } from './auth/auth-guard.guard';\nimport { ChildGuard } from './auth/child.guard';\nimport { LeaveGuard } from './auth/leave.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'Login', pathMatch: 'full' },\n  {\n    path: 'Login',\n    component: LoginComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'Tailyn',\n    component: DashboardComponent,\n    canActivateChild: [ChildGuard],\n    canDeactivate:[LeaveGuard],\n    loadChildren: () => import('./components/dashboard.module').then(m => m.DashboardModule)\n  },\n  { path: '**', component: ErrorComponent }\n];\n\nconst routerOptions: ExtraOptions = {\n  useHash: false,\n  anchorScrolling: 'enabled',\n  scrollPositionRestoration: 'enabled',\n  scrollOffset: [0, 0],\n  // ...any other options you'd like to use\n};\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, routerOptions)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoadingService } from './services/loading.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  // loading Status\n  public app_Loading: Subscription;\n  public loading_val: boolean = false;\n\n  constructor(private loadingService: LoadingService, private router: Router)\n  {\n    this.app_Loading = this.loadingService.get_App_Loading().subscribe();\n    this.loading_val = false;\n  }\n\n  ngOnInit(): void {\n\n    this.loadingService.get_App_Loading().subscribe(res => this.loading_val = res);\n    // let test:any = this.router.getCurrentNavigation().extras.state.loading;\n\n    // console.log(test);\n    \n    // this.router.events.subscribe(event => {\n\n      // console.log(event);\n      \n      // if(event instanceof NavigationEnd) {\n        //  alert('navigation succeeded');\n      // }\n    // })\n  }\n\n  ngOnChanges(changes: SimpleChanges): void { \n    // console.log('change');\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    // console.log('ngAfterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    // console.log('ngAfterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    // console.log('ngAfterViewChecked');\n  }\n\n  ngOnDestroy() {\n    // console.log('ngOnDestroy');\n    this.app_Loading.unsubscribe();\n  }\n\n  ngDoCheck(): void {\n    //Called every time that the input properties of a component or a directive are checked. Use it to extend change detection by performing a custom check.\n    //Add 'implements DoCheck' to the class.\n    // this.loginComponent.status_View.subscribe(res => {\n    //   console.log(res);\n      \n    // });\n  }\n\n  onActivate(event: any){ // 刷新頁面\n\n    this.app_Loading.unsubscribe();\n\n    if(event)\n    {\n      // setTimeout(() => {\n      //   console.clear();\n      // }, 1000);\n    }\n  }\n\n  onDeactivate(event: any){ // 離開本頁\n    \n    if(event)\n    {\n      // setTimeout(() => {\n      //   console.clear();\n      // }, 1000);\n    }\n    // console.log(\"onDeactivate\");\n  }\n\n  ngOnAttach(): void {\n    console.log(this, 'attached!');\n  }\n\n  ngOnDetach(): void {\n    console.log(this, 'detached!');\n  }\n}\n","<ng-container *ngIf=\"loading_val\">\r\n    <app-loading></app-loading>\r\n</ng-container>\r\n<router-outlet (activate)=\"onActivate($event)\" (deactivate)=\"onDeactivate($event)\"></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardModule } from './components/dashboard.module';\nimport { ShardModule } from './shard/shard.module';\nimport { AuthGuard } from './auth/auth-guard.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DashboardModule,\n    ShardModule,\n  ],\n  providers: [\n    AuthGuard,\n    // { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n  constructor(private loginService: LoginService, private router: Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {      \n\n    const user = this.loginService.read_User_SessionStorage();\n              \n    if(user != null)\n    {      \n      if(Object.keys(user).length === 6)\n      { \n        this.router.navigate(['/Tailyn']);\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChild, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoadingService } from '../services/loading.service';\nimport { LoginService } from '../services/login.service';\n\n@Injectable()\n\nexport class ChildGuard implements CanActivateChild {\n\n  constructor(\n    private loginService: LoginService, \n    private loadingService: LoadingService, \n    private router: Router\n    ) {}\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    this.loadingService.set_Dashboard_Loading(true);\n\n    const user = this.loginService.read_User_SessionStorage();    \n    \n    if((user == null) || (Object.keys(user).length < 5))\n    {\n      this.router.navigate(['/Login']);\n      return false;\n    }\n    else if(user.e_Lv == 0)\n    {\n      this.loginService.logout();\n      return false;\n    }\n\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\nimport { HomeComponent } from '../components/home/home.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveGuard implements CanDeactivate<DashboardComponent> {\n  canDeactivate(\n    component: DashboardComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      // console.log('LeaveGuard');\n      // console.log(currentRoute.params);\n      // console.log(currentState.url);\n      \n      return component.canDeactivate || window.confirm('Are u sure??');\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { \n  NgbPaginationModule, \n  NgbAlertModule, \n  NgbCollapseModule,\n  NgbDropdownModule,\n } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  imports: [\n    NgbModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    NgbCollapseModule,\n    NgbDropdownModule\n  ],\n  exports: [\n    NgbModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    NgbCollapseModule,\n    NgbDropdownModule,\n  ]\n})\nexport class BootstrapModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n\n  @Input() public status: boolean = false;\n  @Input() public types: string = 'danger';\n  @Input() public messages: string = '...';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<ngb-alert *ngIf=\"status\" [type]=\"types\" (click)=\"status = false\" animation=\"true\" [dismissible]=\"true\">\n    <strong>{{ messages }}</strong>\n</ngb-alert>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-content-header',\n  templateUrl: './content-header.component.html',\n  styleUrls: ['./content-header.component.scss']\n})\nexport class ContentHeaderComponent implements OnInit {\n  // User\n  public user: Employee;\n  // FormGroup\n  public fbGroup: FormGroup;\n  // Input Search Text \n  public searchText: string;\n  // Delay Time\n  public delayTime: boolean;\n  // check lv\n  public check_Lv: boolean;\n\n  // Modal\n  // private modal_Subscription: Subscription;\n  // @Input() user_: User | null;\n  // @Input() fb_Value_:  { [key: string]: AbstractControl};\n\n  constructor(\n    private modalService: ModalService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n    ){\n      this.modalService.get_User_Profile().subscribe((res: Employee) => this.user = res);\n      this.modalService.get_FormGroup().subscribe(res => this.fbGroup = res); \n    }\n\n  ngOnInit(): void {\n    this.searchText = '';\n    this.delayTime = true;\n    this.check_Active_Roueter();\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string} {\n    return Object.values(this.fbGroup.value) || '';\n  }\n\n  // Create\n  create(): void {\n    this.modalService.set_modal({status: 'create', show: true, size: 'md'});\n  }\n\n  // Update\n  update(): void {\n    this.modalService.set_modal({status: 'update', show: true, size: 'md'});\n  }\n  \n  // Read\n  read(): void {\n    this.delayTime = false;\n    this.searchText = '';\n    this.modalService.set_Read(true);\n    setTimeout(() => {\n      this.delayTime = true;\n    }, 5000);\n  }\n\n  // Search\n  search(): void {\n    this.modalService.set_Search(this.searchText);    \n  }\n\n  // Delete\n  delete(): void {\n    this.modalService.set_modal({status: 'delete', show: true, size: 'sm'});\n  }\n\n  // Check Active Router And User Lv\n  check_Active_Roueter(): void {    \n    // When reload\n    if(this.activatedRoute.snapshot.firstChild.routeConfig.path == 'Employee' && this.user.e_Lv != 3)\n    {\n      this.check_Lv = false;\n    }\n    else if(this.user.e_Lv < 2)\n    {\n      this.check_Lv = false;\n    }\n    else\n    {\n      this.check_Lv = true;\n    }\n\n    // When router active\n    this.router.events.pipe(filter(e => e instanceof NavigationEnd)).subscribe((e: NavigationEnd) => {      \n        if(e.url == '/Tailyn/Employee' && this.user.e_Lv != 3)\n        {\n          this.check_Lv = false;\n        }\n        else if(this.user.e_Lv < 2)\n        {\n          this.check_Lv = false;\n        }\n        else\n        {\n          this.check_Lv = true;\n        }\n    });\n  }\n  \n  // Check FormGroup Value\n  get check_Value(): boolean {    \n    if(this.fb_Value_Index[0])\n    {\n      // object to array\n      for (const [key, val] of Object.entries(this.fbGroup.value))\n      {        \n        if(val != null)\n        {          \n          if(val != '' && (val == this.user.e_JobNumber) || this.user.e_Lv == 3)\n          {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"container-md mt-2 mb-2\">\n  <div class=\"row justify-content-md-center\">\n    <!-- Search Btn -->\n    <div class=\"col-md-7 col-sm-12\">\n      <div class=\"input-group input-group-sm mb-3\">\n        <div class=\"input-group-prepend\">\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"read()\"\n            [disabled]=\"!searchText.length && !delayTime\">刷新</button>\n        </div>\n        <input type=\"text\" class=\"form-control\" maxlength=\"50\" [(ngModel)]=\"searchText\">\n        <div class=\"input-group-append\">\n          <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"search()\"\n            [disabled]=\"!searchText.length\">搜尋</button>\n        </div>\n      </div>\n    </div>\n    <!-- /Search Btn -->\n\n    <!-- Crud Btns -->\n    <ng-container *ngIf=\"fbGroup != null\">\n      <div class=\"col-md-5 col-sm-12 d-flex justify-content-between\">\n        <ng-container *ngIf=\"check_Lv\">\n          <div class=\"col text-center\">\n            <button type=\"button\" class=\"btn btn-outline-info btn-sm\" (click)=\"create()\">新增</button>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"check_Value\">\n          <div class=\"col text-center\">\n            <button type=\"button\" class=\"btn btn-outline-warning btn-sm\" (click)=\"update()\"\n              [disabled]=\"user.e_Lv < 2 || false\">更新</button>\n          </div>\n          <div class=\"col text-center\">\n            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"delete()\"\n              [disabled]=\"user.e_Lv < 2 || false\">刪除</button>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n    <!-- /Crud Btns -->\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { RepairComponent } from './repair/repair.component';\nimport { WorkComponent } from './work/work.component';\nimport { TutorialComponent } from './tutorial/tutorial.component';\nimport { ErrorComponent } from './error/error.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: HomeComponent },\n  {\n    path: 'Employee', component: EmployeeComponent,\n    data: { title: '員工', icon: 'bi bi-file-earmark-person' }\n  },\n  { path: 'Repair', component: RepairComponent },\n  { path: 'Work', component: WorkComponent },\n  { path: 'Tutorial', component: TutorialComponent },\n  { path: '**', component: ErrorComponent }\n];\n\n@NgModule({\n  imports: [\n    // CommonModule, // 針對export components 對外使用\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ModalComponent } from './modal/modal.component';\nimport { HomeComponent } from './home/home.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { TutorialComponent } from './tutorial/tutorial.component';\nimport { RepairComponent } from './repair/repair.component';\nimport { WorkComponent } from './work/work.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { ShardModule } from '../shard/shard.module';\n// import { HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { ErrorInterceptor } from '../helps/error.interceptor';\nimport { EmployeeService } from '../services/employee.service';\nimport { CommonModule } from '@angular/common';\nimport { ChildGuard } from '../auth/child.guard';\nimport { ErrorComponent } from './error/error.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContentHeaderComponent } from './content-header/content-header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { WorkHoursService } from '../services/work-hours.service';\nimport { StandService } from '../services/stand.service';\nimport { SplitePipe } from '../pipes/splite.pipe';\nimport { RepairService } from '../services/repair.service';\n\n@NgModule({\n  declarations: [\n    ModalComponent,\n    DashboardComponent,\n    HomeComponent,\n    EmployeeComponent,\n    TutorialComponent,\n    RepairComponent,\n    WorkComponent,\n    ErrorComponent,\n    SidebarComponent,\n    FooterComponent,\n    ContentHeaderComponent,\n    HeaderComponent,\n    SplitePipe\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ShardModule\n  ],\n  exports: [],\n  providers: [\n    ChildGuard,\n    EmployeeService,\n    WorkHoursService,\n    RepairService,\n    StandService,\n    // { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n})\nexport class DashboardModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  // loading Status\n  public dashboard_Loading: Subscription;\n  public is_Loading: boolean;\n\n  constructor(\n    private loadingService: LoadingService,\n    private modalService: ModalService,\n    private loginService: LoginService)\n  {\n    this.dashboard_Loading = this.loadingService.get_Dashboard_Loading().subscribe();\n    this.is_Loading = false;\n  }\n  ngOnInit(): void {    \n    this.loadingService.get_Dashboard_Loading().subscribe(res => this.is_Loading = res);\n  }\n\n  get canDeactivate() {\n    return true;\n  }  \n\n  onActivate(event: any){ // 參數\n\n    let user_Session: Employee | null = this.loginService.read_User_SessionStorage();\n\n    if(user_Session)\n    {\n      this.modalService.set_User_Profile(user_Session);\n    }\n    else\n    {\n      // Loading View\n      this.loadingService.set_Dashboard_Loading(true);          \n      // Logout\n      setTimeout(() => {\n        this.loginService.logout();\n      }, 3000);\n    }\n    \n    \n    // console.log(event);\n    \n    // setTimeout(() => {\n    //   if(event.result_Data.length)\n    //   {\n    //     this.loadingService.set_Loading(false);\n    //   }\n    // }, 1000);\n  }\n  \n  onDeactivate(event: any){ // 切換\n    // console.log(event);\n    // console.log(\"onDeactivate\");\n  }\n\n  ngOnDestroy() {\n    // console.log('ngOnDestroy');\n    this.dashboard_Loading.unsubscribe();\n  }\n}\n","<!-- Header -->\n<app-header></app-header>\n<!-- /Header -->\n\n<!-- Main -->\n<div class=\"d-flex\">\n    <!-- Loading -->\n    <ng-container *ngIf=\"is_Loading\">\n        <app-loading></app-loading>\n    </ng-container>\n    <!-- /Loading -->\n\n    <main role=\"main\" class=\"container-fluid\">\n        <!-- Header Content -->\n        <app-content-header></app-content-header>\n        <!-- /Header Content -->\n\n        <!-- Router Outlet -->\n        <router-outlet (activate)=\"onActivate($event)\" (deactivate)=\"onDeactivate($event)\"></router-outlet>\n        <!-- /Router Outlet -->\n\n        <!-- Modal -->\n        <app-modal></app-modal>\n        <!-- /Modal -->\n    </main>\n</div>\n<!-- /Main -->\n<app-footer></app-footer>","import { Component, ComponentFactoryResolver, ElementRef, EventEmitter, HostListener, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbRatingConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { Modal } from 'src/app/interfaces/modal';\nimport { ErrorValidators, InputValidators, Reset_Validators } from 'src/app/methods/input-validators';\nimport { passwordMatchValidator } from 'src/app/methods/password-Match-Validator';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss'],\n})\nexport class EmployeeComponent implements OnInit {\n  // Form\n  @ViewChild('form_') form_: TemplateRef<HTMLElement>;\n  // Data\n  public result_Async$: Observable<Array<Employee>> | Observable<[]>;\n  public result_Data: Employee[];\n  public result_List: Employee[];\n  // User\n  public user: Employee;\n  // e_ConfirmPassword: [\n  //   '', \n  //   {\n  //     Validators:[\n  //       Validators.required\n  //     ],\n  //     updateOn: 'blur',\n  //     validators: [passwordMatchValidator]\n  //   },\n    \n  // ],\n  // FormGroup\n  public fbGroup: FormGroup;\n  // Input Validators blur\n  public inputValidators: Function = InputValidators;\n  // Input Validators Error\n  public errorValidators: object = ErrorValidators;\n  // Pagination\n  public page = 1;\n  public pageSize = 10;\n\n  constructor(\n    private loadingService: LoadingService,\n    private loginService : LoginService,\n    private employeeService: EmployeeService, \n    private fb: FormBuilder,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private ngbRatingConfig: NgbRatingConfig)\n    {\n      ngbRatingConfig.max = 3;\n      ngbRatingConfig.readonly = true;\n    }\n\n  ngOnInit(): void {\n    this.default_FormGroup();\n    Reset_Validators(this.fbGroup);\n    this.result_Data = [];\n    this.result_List = [];\n    this.read();\n    this.modal_Service();\n  }\n\n  ngAfterViewInit(): void {\n    this.modalService.set_FormGroup(this.fbGroup);\n    this.modalService.set_Form(this.form_);\n  }\n\n  // Default FormGroup\n  default_FormGroup(): void {\n    this.fbGroup = this.fb.group({\n      e_Id: [''],\n      e_Name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z\\u4e00-\\u9fa5]{2,10}$/)]],\n      e_Email: ['', [Validators.required, Validators.maxLength(30), Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n      e_JobNumber: ['', [Validators.required, Validators.pattern(/^[0-9]{3,5}$/)]],\n      e_PassWord: ['', [Validators.required, Validators.pattern(/^[\\d\\W\\a-zA-Z]{3,30}$/)]],\n      e_ConfirmPassword: ['', Validators.required],\n      e_Lv: ['', [Validators.required, Validators.maxLength(1)]],\n      e_Date: this.fb.array([this.fb.control('', Validators.required)])\n    },\n    {\n      updateOn: 'blur',\n      validators: [passwordMatchValidator]\n    });\n    this.reset_FormArray_Val();\n  }\n\n  // Modal Service\n  modal_Service(): void {\n    this.modalService.get_modal().subscribe((res: Modal) => this.reset_FormGroup(res.status));\n    this.modalService.get_Search().subscribe(res => this.search(res));\n    this.modalService.get_Create().subscribe(res => this.create(res));\n    this.modalService.get_Read().subscribe(res => this.read());\n    this.modalService.get_Update().subscribe(res => this.update(res));\n    this.modalService.get_Delete().subscribe(res => this.delete(res));\n    this.modalService.get_User_Profile().subscribe((res: Employee) => this.user = res);\n  }\n  \n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl} {\n    return this.fbGroup.controls;\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string} {\n    return Object.values(this.fbGroup.value) || '';\n  }\n\n  // FormGroup Reset\n  reset_FormGroup(status: string): void {     \n    if(status == 'create')\n    {\n      this.fbGroup.reset({\n          e_Lv: '1',\n          e_PassWord: '',\n          e_ConfirmPassword: ''\n      });\n      this.fb_Value['e_PassWord'].setValidators([Validators.required, Validators.pattern(/^[\\d\\W\\a-zA-Z]{3,30}$/)]);\n      this.fb_Value['e_PassWord'].updateValueAndValidity();\n      this.fb_Value['e_ConfirmPassword'].setValidators([Validators.required, Validators.pattern(/^[\\d\\W\\a-zA-Z]{3,30}$/)]);\n      this.fb_Value['e_ConfirmPassword'].updateValueAndValidity();\n      // Reset FormArray\n      this.reset_FormArray_Val();        \n    }\n    else\n    {\n      this.fb_Value['e_PassWord'].reset('');\n      this.fb_Value['e_PassWord'].setValidators(null);\n      this.fb_Value['e_PassWord'].updateValueAndValidity();\n      this.fb_Value['e_ConfirmPassword'].reset('');\n      this.fb_Value['e_ConfirmPassword'].setValidators(null);\n      this.fb_Value['e_ConfirmPassword'].updateValueAndValidity();\n    }\n    Reset_Validators(this.fbGroup);\n  }\n\n  // User Profile\n  user_Profile(employee: Employee[]): void {\n\n    let user_Session: Employee | null = this.loginService.read_User_SessionStorage();\n    \n    if(user_Session)\n    {\n      const userData = employee.find((item: Employee, index: number) => item.e_JobNumber === user_Session!.e_JobNumber);      \n\n      if(userData != undefined)\n      {  \n        this.loginService.create_User_SessionStorage(userData);\n        \n        this.modalService.set_User_Profile(userData);   \n      }\n    }\n  }\n  \n  // Create\n  create(fg: FormGroup): void {    \n    this.employeeService.create(fg.value)\n    .subscribe(\n      {\n        next: (res:boolean) => {\n          if(res)\n          {\n            this.read();\n            this.modalService.set_modal({show: false});\n          }\n          else\n          {\n            this.alertService.set_Alert(22);\n          }\n        },\n        error: (err) => {\n          this.alertService.set_Alert(23);\n        },\n        complete: () => {\n          \n        }\n      }\n    );\n  }\n\n  // Read\n  read(): void {\n    // this.employeeAsync$ = this.employeeService.read();\n    this.employeeService.read()\n    .subscribe(\n      {\n        next: (res: Employee[]) => { \n          if(res.length)\n          {            \n            // const arr = res[0].e_Inventory.split(',').filter(Boolean);\n            // this.result_Async$ = this.employeeService.read();\n            this.result_Data = res;\n            this.result_List = res;\n            this.user_Profile(res);\n            this.table_List_Sort();\n            this.refreshResult_List();\n          }\n        },\n        error: (err) => {\n          this.alertService.set_Alert(13);\n        },\n        complete: () => {\n          this.loadingService.set_Dashboard_Loading(false);          \n        }\n      }\n    );\n  }\n  \n  // Search\n  // search(searchText: HTMLInputElement): void {\n  search(searchText: string): void {\n    this.result_List = this.result_Data.filter(res => {      \n      const term = searchText.toLowerCase();\n      return res.e_JobNumber.toLowerCase().includes(term)\n          || res.e_Email?.toLowerCase().includes(term)\n          || res.e_Name.toLowerCase().includes(term);\n          // || this.decimalPipe.transform(res.w_Time).includes(term);\n    });\n    // this.result_List = [];\n\n    // for (const [objKey, obj] of Object.entries(this.result_Data))\n    // {    \n    //   for (const [key, val] of Object.entries(obj))\n    //   {\n    //     if(key != 'e_Id' && key != 'e_PassWord' && key != 'e_Lv' &&)\n    //     {\n    //       if (val.includes(searchText))\n    //       {\n    //         this.result_List.push(this.result_Data[objKey]);\n    //         break;\n    //       }\n    //     }\n    //   }\n    // } \n  }\n\n  // Pagination\n  refreshResult_List() {\n    this.result_List = this.result_Data\n    .map((country, i) => ({id: i + 1, ...country}))\n    .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\n  }\n\n  // Table Short\n  table_List_Sort(name: string = 'w_Id', isAsc: boolean = false): void {    \n    this.result_List.sort((a:any, b:any) => {     \n      return (a[name] < b[name] ? -1 : 1) * (isAsc ? 1 : -1);\n    });    \n  }\n\n  // Update\n  update(fg: FormGroup): void { \n    this.employeeService.update(fg.value)\n    .subscribe(\n      {\n        next: (res: boolean) => {\n          if(res)\n          {\n            this.read();\n            this.modalService.set_modal({show: false});\n          }\n          else\n          {\n            this.alertService.set_Alert(32);\n          }\n        },\n        error: (err) => {\n          this.alertService.set_Alert(33);\n        },\n        complete: () => {\n          // this.reset_Default_Form();\n        }\n      }\n    )\n  }\n\n  // Delete\n  delete(id: number): void {\n    this.employeeService.delete(id)\n    .subscribe(\n      {\n        next: (res: boolean) => {\n          if(res)\n          {      \n            this.read();\n            this.modalService.set_modal({show: false});\n          }\n          else\n          {\n            this.alertService.set_Alert(42);\n          }\n\n          // this.stateView.next({loading: false, error: false});\n        },\n        error: (err) => {\n          this.alertService.set_Alert(43);\n        }\n      }\n    );\n  }\n\n  // choose\n  choose(item: Employee): void {\n    this.fbGroup.patchValue({\n      e_Id: item.e_Id,\n      e_Name: item.e_Name,\n      e_Email: item.e_Email,\n      e_JobNumber: item.e_JobNumber\n    });\n    // Disabled\n    const isDisabled: boolean = this.user.e_Lv == 3 ? false : true;\n    // e_Lv\n    const lv_validators: Validators = this.fb_Value['e_Lv'].validator;      \n    this.fbGroup.setControl('e_Lv', this.fb.control({value: item.e_Lv, disabled: isDisabled},lv_validators));\n    // e_JobNumber\n    const job_validators: Validators = this.fb_Value['e_JobNumber'].validator;      \n    this.fbGroup.setControl('e_JobNumber', this.fb.control({value: item.e_JobNumber, disabled: isDisabled},job_validators));\n    // Set e_Date Value\n    this.set_FormArray_Val(item.e_Date); \n    // Update Modal FormGroup\n    this.modalService.set_FormGroup(this.fbGroup);\n\n    // @Input() control: AbstractControl;\n    // let listOfAllValidationRules = this.control.getValidators().push(validateZipFn(countryCode)]);\n    // this.control.setValidators(listOfAllValidationRules);\n  }\n\n  // Update FormArray Value\n  set_FormArray_Val(item: string = ''): void {  \n    const dataArray: Array<string> = item.split(',');\n        \n    if(dataArray.length == 4)\n    {\n      const validators: Validators = this.fb_Value['e_Date'].get('0').validator;      \n      const isDisabled: boolean = this.user.e_Lv == 3 ? false : true;\n      this.fb_Value['e_Date'].get('0').reset({value: dataArray[0], disabled: isDisabled},validators);\n      this.fb_Value['e_Date'].get('1').reset({value: dataArray[1], disabled: isDisabled},validators);\n      this.fb_Value['e_Date'].get('2').reset(dataArray[2],validators);\n      this.fb_Value['e_Date'].get('3').reset(dataArray[3],validators);\n    }\n  }\n\n  // Reset FormArray Value\n  reset_FormArray_Val(): void {  \n    const today: string = new Date().toISOString().slice(0, 10);\n    const validators: Validators = this.fb_Value['e_Date'].get('0').validator;    \n    this.fbGroup.setControl('e_Date', this.fb.array([\n      this.fb.control(today, validators),\n      this.fb.control(today, validators),\n      this.fb.control('0', validators),\n      this.fb.control('0', validators)\n    ]));\n  }\n\n  // DateTimePick Value Chekc\n  onValue_Check(id: string, index: number): string {\n    let values: string = this.fb_Value[id].value;\n    return values.length > 18 ? values.split(',')[index] : '';\n  }\n\n  // DateTimePick Value\n  onValue(id: string): string {\n\n    let values: any = '';\n\n    if(this.fb_Value_Index[0])\n    {      \n      if(id == 'Sdate')\n      {\n        values = this.onValue_Check('Sdate', 0); \n      }\n      else\n      {\n        values = this.onValue_Check('Edate', 1); \n      }\n    }\n    else\n    {\n      // Default DateTime\n      const today: string = new Date().toISOString().slice(0, 10);\n      values = this.datetim_Replace(today);\n      this.onDate_Check('e_Date', values, 0);\n      this.onDate_Check('e_Date', values, 1);\n    }\n    \n    if(values.length == 19)\n    {\n      values = values.replace(' ', 'T');\n      // substring skip second value\n      return values.substring(0, 16);\n    }\n\n    return values;\n  }\n\n  // DateTime Replace Value\n  datetim_Replace(value: string): string {\n    const timestamp = value.replace('T', ' ');\n    let datetime = timestamp.replace('/','-');\n    return value ? datetime : '';\n  }\n\n  // Check VALUE\n  onDate_Check(name: string, value: string, index: number): void {    \n        \n    let choose_Value: Array<string> = this.fb_Value[name].value;\n    choose_Value[index] = '';\n    choose_Value[2] = '0';\n    choose_Value[3] = '0';\n\n    if(value.length)\n    {\n      // Date Index\n      choose_Value[index] = value;\n      // Total minutes for array index 2\n      choose_Value = this.dateTime_Count(choose_Value);\n    }\n\n    // Update FormGroup Controls Value\n    for(let i=0; i<choose_Value.length; i++)\n    {      \n      this.fb_Value['e_Date'].get(''+i).patchValue(choose_Value[i]);\n    }        \n  }\n\n  // DateTimePick Event\n  onDate(event: HTMLInputElement): void {\n    const id: string = event.id;\n    const index: number = id == 'Sdate' ? 0 : 1;    \n    const value: string = this.datetim_Replace(event.value);    \n    this.onDate_Check('e_Date', value, index);\n  }\n\n  // DataTime Minutes Count\n  dateTime_Count(data: Array<string>): Array<string> {           \n      const start: any    = new Date(data[0]);\n      const end: any      = new Date(data[1]);\n      const total: number = Math.abs(end-start);      \n      const year: number  = total / (1000 * 3600 * 24 * 365);\n      const month: number = year * 12;\n      // const day: string   = (total / (1000 * 3600 * 24)).toString(); // milliseconds * (secs * mins) * hours       \n      data[2] = year.toString().split('.')[0];\n      data[3] = month.toFixed();      \n      return data;\n  }\n\n  // Destroy\n  ngOnDestroy(): void {\n    this.modalService.set_FormGroup(null);    \n  }\n\n  // mouse click \n  @HostListener('mouseup', ['$event']) onClick($event) {\n    // if(this.fb_Value_Index[0])\n    // {\n      // this.reset_FormGroup(['hide', 'create']);    \n    // }\n  }\n}","<!-- Form -->\n<div class=\"container-lg border border-dark p-2 mt-2 mb-2\">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor, nam.\n</div>\n<!-- /Form -->\n\n<!-- /Grid Table -->\n<div class=\"grid-container\">\n  <div class=\"grid-header\">\n    <div>#</div>\n    <div>姓名</div>\n    <div>信箱</div>\n    <div>工號</div>\n    <div>權限</div>\n    <div>年資</div>\n  </div>\n  <div class=\"grid-body\">\n    <!-- <tr *ngFor=\"let item of result_Async$ | async; index as i\" [ngClass]=\"{'text-light bg-dark': item?.e_Id == fb_Value['e_Id'].value}\" (click)=\"choose(item)\"> -->\n    <div class=\"grid-content\" *ngFor=\"let item of result_List; let i = index\" (click)=\"user.e_Lv > 1 && choose(item)\"\n      [ngClass]=\"{'grid-selected': item?.e_Id == fb_Value_Index[0]}\">\n      <div>{{i+1}}</div>\n      <div [class.suspension]=\"item.e_Lv==0\">\n        <span>\n          {{ item.e_Name }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.e_Email }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.e_JobNumber }}\n        </span>\n      </div>\n      <div>\n        <ngb-rating [rate]=\"item.e_Lv\" readonly=\"true\" class=\"h6\"></ngb-rating>\n      </div>\n      <div>\n        <span>\n          {{ item.e_Date | splite:2 }}年\n          /\n          {{ item.e_Date | splite:3 }}月\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- /Grid Table -->\n\n<!-- Pagination -->\n<div class=\"d-flex justify-content-center pagination pagination-sm mt-2\">\n  <ngb-pagination [collectionSize]=\"result_Data.length\" [(page)]=\"page\" [pageSize]=\"10\" [maxSize]=\"100\" [rotate]=\"true\"\n    [boundaryLinks]=\"true\" (pageChange)=\"refreshResult_List()\"></ngb-pagination>\n</div>\n<!-- /Pagination -->\n\n<ng-template #form_>\n  <!-- Form -->\n  <form [formGroup]=\"fbGroup\" #form=\"ngForm\">\n    <!-- Name -->\n    <div class=\"form-group row\">\n      <label for=\"name\" [ngClass]=\"['col-3 col-form-label', errorValidators['e_Name'].length ? 'text-danger' : '']\">\n        {{ errorValidators['e_Name'].length ? errorValidators['e_Name'] : \"姓名\" }}\n      </label>\n      <div class=\"col\">\n        <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"e_Name\" placeholder=\"姓名\"\n          (blur)=\"inputValidators(fbGroup, 'e_Name')\">\n      </div>\n    </div>\n\n    <!-- Job Number -->\n    <div class=\"form-group row\">\n      <label for=\"jobNumber\"\n        [ngClass]=\"['col-3 col-form-label', errorValidators['e_JobNumber'].length ? 'text-danger' : '']\">\n        {{ errorValidators['e_JobNumber'].length ? errorValidators['e_JobNumber'] : \"工號\" }}\n      </label>\n      <div class=\"col\">\n        <input type=\"text\" id=\"jobNumber\" class=\"form-control\" formControlName=\"e_JobNumber\" placeholder=\"工號\"\n          (blur)=\"inputValidators(fbGroup, 'e_JobNumber')\">\n      </div>\n    </div>\n\n    <!-- Password -->\n    <div class=\"form-group row\">\n      <label for=\"passWord\"\n        [ngClass]=\"['col-3 col-form-label', errorValidators['e_PassWord'].length ? 'text-danger' : '']\">\n        {{ errorValidators['e_PassWord'].length ? errorValidators['e_PassWord'] : \"密碼\" }}\n      </label>\n      <div class=\"col\" [class.pr-1]=\"!fb_Value_Index[0]\">\n        <div class=\"input-group input-group-md\">\n          <input type=\"password\" id=\"passWord\" class=\"form-control\" formControlName=\"e_PassWord\" placeholder=\"密碼\"\n            (blur)=\"inputValidators(fbGroup, 'e_PassWord')\" autocomplete=\"false\" #passWord_Type>\n\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"\n              (click)=\"passWord_Type.type == 'text' ? passWord_Type.type = 'password': passWord_Type.type = 'text'\">\n              <i [ngClass]=\"[passWord_Type.type == 'password' ? 'bi bi-eye-slash-fill' : 'bi bi-eye-fill']\"></i>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <ng-container *ngIf=\"!fb_Value_Index[0]\">\n        <!-- ConfirmPassword -->\n        <div class=\"col pl-1\">\n          <div class=\"input-group input-group-md\">\n            <input type=\"password\" class=\"form-control\" formControlName=\"e_ConfirmPassword\" placeholder=\"確認密碼\"\n              (blur)=\"inputValidators(fbGroup, 'e_ConfirmPassword')\" autocomplete=\"false\" #e_ConfirmPassword_Type>\n\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n              (click)=\"e_ConfirmPassword_Type.type == 'text' ? e_ConfirmPassword_Type.type = 'password': e_ConfirmPassword_Type.type = 'text'\">\n              <i [ngClass]=\"[e_ConfirmPassword_Type.type == 'password' ? 'bi bi-eye-slash-fill' : 'bi bi-eye-fill', errorValidators['e_ConfirmPassword'].length ? 'text-danger' : '']\"></i>\n            </span>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Email -->\n    <div class=\"form-group row\">\n      <label for=\"email\" [ngClass]=\"['col-3 col-form-label', errorValidators['e_Email'].length ? 'text-danger' : '']\">\n        {{ errorValidators['e_Email'].length ? errorValidators['e_Email'] : \"信箱\" }}\n      </label>\n\n      <div class=\"col\">\n        <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"e_Email\" placeholder=\"信箱\"\n          (blur)=\"inputValidators(fbGroup, 'e_Email')\">\n      </div>\n    </div>\n\n    <!-- Level -->\n    <div class=\"form-group row\">\n      <label for=\"lv\" class=\"col-3 col-form-label\">權限</label>\n      <div class=\"col-3\">\n        <ngb-rating [rate]=\"fb_Value['e_Lv'].value\" readonly=\"true\" class=\"h4\"></ngb-rating>\n      </div>\n      <div class=\"col-6\">\n        <select id=\"lv\" class=\"form-control text-center custom-select\" formControlName=\"e_Lv\">\n          <option [value]=\"0\">\n            停權\n          </option>\n          <option [value]=\"1\">\n            普通\n          </option>\n          <option [value]=\"2\">\n            中級\n          </option>\n          <option [value]=\"3\">\n            高級\n          </option>\n        </select>\n      </div>\n    </div>\n    <!-- Date Start-->\n    <div class=\"form-group row\" formArrayName=\"e_Date\">\n      <label for=\"Sdate\" class=\"col-3 col-form-label\">入職</label>\n      <div class=\"col\">\n        <input type=\"date\" id=\"Sdate\" class=\"form-control\" formControlName=\"0\" (input)=\"onDate($event.target)\"\n          (blur)=\"inputValidators(fbGroup, 'e_Date', 0)\">\n      </div>\n    </div>\n\n    <!-- Date End-->\n    <div class=\"form-group row\" formArrayName=\"e_Date\">\n      <label for=\"Edate\" class=\"col-3 col-form-label\">在職</label>\n      <div class=\"col\">\n        <input type=\"date\" id=\"Edate\" class=\"form-control\" formControlName=\"1\" (input)=\"onDate($event.target)\"\n          (blur)=\"inputValidators(fbGroup, 'e_Date', 1)\">\n      </div>\n    </div>\n    <!-- <div class=\"mb-2\">\n      <label for=\"dateOfBirth\">權限</label>\n      <div class=\"input-group\">\n        <input id=\"dateOfBirth\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker #dp=\"ngbDatepicker\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"dp.toggle()\" type=\"button\"></button>\n      </div>\n    </div> -->\n  </form>\n  <!-- /Form -->\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router, Event } from '@angular/router';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  \n  public sideBar_Show: boolean = false;\n  // @ViewChild(SidebarComponent, { static: false }) siderbar: SidebarComponent;\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void { \n    this.router.events.subscribe((event: Event) => {      \n      if (event instanceof NavigationEnd)\n      {        \n        this.sideBar_Show = false;\n      }\n    }); \n  }\n\n  @HostListener('window:resize', ['$event'])\n    onResize(event) {\n      const w = document.documentElement.clientWidth;\n      const h = document.documentElement.clientHeight;      \n\n      // (this.siderbar['elementRef'].nativeElement as HTMLElement).style.display = 'none';\n        // this.siderbar['elementRef'].nativeElement.style.transition = 'none';\n\n      if(this.sideBar_Show && (w > 767))\n      {\n        this.sideBar_Show = false;\n      }\n  }\n}\n","<nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap shadow p-0\">\n  <!-- Logo -->\n  <strong class=\"text-danger\">Tailyn</strong>\n  <!-- Menu Button -->\n  <div class=\"menu-btn\" [class.open]=\"sideBar_Show\" (click)=\"sideBar_Show = !sideBar_Show\">\n    <div class=\"menu-btn-burger\"></div>\n  </div>\n  <!-- SideBar -->\n  <app-sidebar [ngClass]=\"{'show-sidebar': !sideBar_Show}\" [ngStyle]=\"{'transition': sideBar_Show ? 'all 0.5s linear' : 'none'}\"></app-sidebar>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  chart_Line: any = null;\n\n  constructor(private loadingService: LoadingService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.loadingService.set_Dashboard_Loading(false);\n  }\n\n  chart_setting(): void {\n\n    if(this.chart_Line == null)\n    {\n      // this.chart_Line = new Chart('canvasPie', {\n      //   'type': 'pie',\n      //   'data': {\n      //     'labels': this.chart_Label,\n      //     'datasets': [\n      //       {\n      //         'data': [0,0,0,0,0,0],\n      //         'backgroundColor': [\n      //           'rgba(100, 255, 150, 0.4)',\n      //           'rgba(70, 165, 200, 0.4)',\n      //           'rgba(255, 206, 86, 0.4)',\n      //           'rgba(0, 100, 255, 0.4)',\n      //           'rgba(200, 60, 60, 0.4)',\n      //           'rgba(150, 150, 150, 0.4)',\n      //         ],\n      //         'borderColor': [\n      //           'rgba(100, 255, 150, 1)',\n      //           'rgba(70, 165, 200, 1)',\n      //           'rgba(255, 206, 86, 1)',\n      //           'rgba(0, 100, 255, 1)',\n      //           'rgba(200, 60, 60, 1)',\n      //           'rgba(150, 150, 150, 1)',\n      //         ],\n      //         'borderWidth': 2,\n      //       }\n      //     ]\n      //   },\n      //   'options': {\n      //     'responsive': true,\n      //     'plugins': {\n      //       'title': {\n      //         'display': false,\n      //         'text': ''\n      //       }\n      //     },\n      //     'scales': {\n      //       'yAxes': [{\n      //         'ticks': {\n      //           'suggestedMin': 0,\n      //           'suggestedMax': 10\n      //         }\n      //         ,\n      //         'scaleLabel': {\n      //           'display': false,\n      //           'labelString': ''\n      //         }\n      //       }],\n      //       'xAxes': []\n      //     }\n      //   }\n      // });\n    }\n\n\n\n  }\n\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h1 class=\"h2\">Dashboard</h1>\n  <div class=\"btn-toolbar mb-2 mb-md-0\">\n    <div class=\"btn-group mr-2\">\n      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Share</button>\n      <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Export</button>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n      <span data-feather=\"calendar\"></span>\n      This week\n    </button>\n  </div>\n</div>\n\n<!-- \n<canvas class=\"my-4 w-100\" id=\"myChart\" width=\"900\" height=\"380\"></canvas> -->\n\n<h2>Section title</h2>\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Header</th>\n        <th>Header</th>\n        <th>Header</th>\n        <th>Header</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>1,001</td>\n        <td>random</td>\n        <td>data</td>\n        <td>placeholder</td>\n        <td>text</td>\n      </tr>\n      <tr>\n        <td>1,002</td>\n        <td>placeholder</td>\n        <td>irrelevant</td>\n        <td>visual</td>\n        <td>layout</td>\n      </tr>\n      <tr>\n        <td>1,003</td>\n        <td>data</td>\n        <td>rich</td>\n        <td>dashboard</td>\n        <td>tabular</td>\n      </tr>\n      <tr>\n        <td>1,003</td>\n        <td>information</td>\n        <td>placeholder</td>\n        <td>illustrative</td>\n        <td>data</td>\n      </tr>\n      <tr>\n        <td>1,004</td>\n        <td>text</td>\n        <td>random</td>\n        <td>layout</td>\n        <td>dashboard</td>\n      </tr>\n      <tr>\n        <td>1,005</td>\n        <td>dashboard</td>\n        <td>irrelevant</td>\n        <td>text</td>\n        <td>placeholder</td>\n      </tr>\n      <tr>\n        <td>1,006</td>\n        <td>dashboard</td>\n        <td>illustrative</td>\n        <td>rich</td>\n        <td>data</td>\n      </tr>\n      <tr>\n        <td>1,007</td>\n        <td>placeholder</td>\n        <td>tabular</td>\n        <td>information</td>\n        <td>irrelevant</td>\n      </tr>\n      <tr>\n        <td>1,008</td>\n        <td>random</td>\n        <td>data</td>\n        <td>placeholder</td>\n        <td>text</td>\n      </tr>\n      <tr>\n        <td>1,009</td>\n        <td>placeholder</td>\n        <td>irrelevant</td>\n        <td>visual</td>\n        <td>layout</td>\n      </tr>\n      <tr>\n        <td>1,010</td>\n        <td>data</td>\n        <td>rich</td>\n        <td>dashboard</td>\n        <td>tabular</td>\n      </tr>\n      <tr>\n        <td>1,011</td>\n        <td>information</td>\n        <td>placeholder</td>\n        <td>illustrative</td>\n        <td>data</td>\n      </tr>\n      <tr>\n        <td>1,012</td>\n        <td>text</td>\n        <td>placeholder</td>\n        <td>layout</td>\n        <td>dashboard</td>\n      </tr>\n      <tr>\n        <td>1,013</td>\n        <td>dashboard</td>\n        <td>irrelevant</td>\n        <td>text</td>\n        <td>visual</td>\n      </tr>\n      <tr>\n        <td>1,014</td>\n        <td>dashboard</td>\n        <td>illustrative</td>\n        <td>rich</td>\n        <td>data</td>\n      </tr>\n      <tr>\n        <td>1,015</td>\n        <td>random</td>\n        <td>tabular</td>\n        <td>information</td>\n        <td>text</td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent {\n\n  constructor() { }\n}\n","<div class=\"load-backdrop\">\n    <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n    </div>\n    <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n    </div>\n    <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n    </div>\n</div>","import { Component, ComponentFactoryResolver, OnInit, ViewChild} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription, timer } from 'rxjs';\nimport { AlertsDirective } from 'src/app/directives/alerts.directive';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  // counter\n  public iscounter?: Subscription | null;\n  // progressbar View\n  public progressbar_View: boolean = false;\n  // progressbar Type\n  public progressbar_Type: string = 'secondary';\n  // progressbar Value\n  public progressbar_Value: number = 25;\n  // FormGroup\n  public fbGroup: FormGroup = this.fb.group({\n    jNumber: [null, Validators.required],\n    passWord: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n    newPassWord: [null],\n    email: [null],\n    code: [null]\n  });\n\n  // FormGroup Error\n  public forms: {\n    email: boolean;\n    code: boolean;\n  } = {\n    email: false,\n    code: false\n  };\n\n  public status: {\n    account: boolean;\n    email: boolean;\n    code: boolean;\n    system: boolean;\n    ip: string;\n    counter: number\n  } = {\n    account: true,\n    email: true,\n    code: true,\n    system: true,\n    ip: '',\n    counter: 0\n  };\n\n  @ViewChild(AlertsDirective) alerts: AlertsDirective;\n\n  // Constructor\n  constructor(\n    private loadingService: LoadingService,\n    private loginService: LoginService,\n    private fb: FormBuilder,\n    private router: Router,\n    private componentFactoryResolver: ComponentFactoryResolver\n    ){}\n\n  // NgOnInit\n  ngOnInit(): void {\n    this.counter();\n  }\n\n  // NgAfterContentInit\n  ngAfterContentInit(): void {            \n    // this.router.events.subscribe(event => {\n\n    //   console.log(event);\n      \n    //   if(event instanceof NavigationEnd) {\n    //      alert('navigation succeeded');\n    //   }\n    // });\n\n  }\n\n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl} {\n    return this.fbGroup.controls;\n  }\n\n  // Reset Forms\n  reset_Forms(): void {\n    this.forms = {\n      email: false,\n      code: false\n    }\n  }\n\n  // Reset Status\n  reset_Status(): void {\n    this.status = {\n      account: true,\n      email: true,\n      code: true,\n      system: true,\n      ip: '',\n      counter: this.loginService.read_Time_SessionStorage() ? this.loginService.read_Time_SessionStorage() : 0\n    };\n  }\n\n  // Toggle View\n  toggle_Form(): void {\n\n    this.forms.email =! this.forms.email;\n\n    this.reset_Status();\n\n    if(this.forms.email)\n    {\n      this.fb_Value['email'].setValidators([Validators.required]);\n      this.fb_Value['email'].updateValueAndValidity();\n    }\n    else\n    {\n      this.fb_Value['passWord'].setValidators([Validators.required]);\n      this.fb_Value['passWord'].updateValueAndValidity();\n\n      this.fb_Value['newPassWord'].clearValidators();\n      this.fb_Value['newPassWord'].updateValueAndValidity();\n\n      this.fb_Value['code'].clearValidators();\n      this.fb_Value['code'].updateValueAndValidity();\n    }\n\n    this.fbGroup.reset();\n  }\n\n  // User Ip\n  /*\n  * 1. get ip\n  *\n  * 2. send ip to email\n  */\n  get_IP(): void {\n    this.loginService.user_Ip().subscribe(\n      {\n        next: (userIP: string) => {          \n          this.status.ip = userIP.length && userIP;\n        },\n        error: (err) => {\n          this.status.system = false;\n          this.progressbar_Show(false);\n        },\n        complete: () => {          \n          if(this.status.ip.length)\n          {\n            this.get_Email(\n              {\n                jNumber: this.fb_Value['jNumber'].value,\n                email: this.fb_Value['email'].value,\n                ip: this.status.ip\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  // counter\n  counter(): void {\n    this.status.counter = this.loginService.read_Time_SessionStorage();     \n\n    if(this.status.counter)\n    {\n      // 60 minutes\n      this.iscounter = timer(0, 60000).subscribe(() => {\n\n        if (this.status.counter)\n        {\n          --this.status.counter;\n        }\n        else\n        {\n          this.iscounter = null;\n        }\n      });\n    }\n    else\n    {\n      this.status.counter = 0;\n    }\n  }\n  \n  // User Email\n  get_Email(userData: object): void {\n\n    this.loginService.send_Email(userData).subscribe(\n      {\n        next: (res: boolean) => { \n          this.status.email = res;\n        },\n        error: (err) => {\n          this.status.system = false;\n          this.progressbar_Show(false);\n        },\n        complete: () => {  \n\n          if(this.status.email)\n          {            \n            this.fb_Value['newPassWord'].setValidators([Validators.required, Validators.minLength(3), Validators.maxLength(20)]);\n            this.fb_Value['newPassWord'].updateValueAndValidity();\n            this.fb_Value['code'].setValidators([Validators.required]);\n            this.fb_Value['code'].updateValueAndValidity();\n\n            this.forms.code = true;\n            this.progressbar_Show(true, true);\n          }\n        }\n      }\n    );\n  }\n\n  // Login\n  login(): void {\n\n    // const alertComponent = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n    // this.alerts.viewContainerRef.clear();\n    // const componentRef = this.alerts.viewContainerRef.createComponent(alertComponent);\n    // componentRef.instance.messages = 'Nigo Chen';    \n    // componentRef.instance.status =  true;    \n\n    this.loginService.login(this.fbGroup.value).subscribe(\n      {\n        next: (res: boolean) => {                     \n          this.status.account = res;\n        },\n        error: (err) => {\n          this.status.system = false;\n          this.progressbar_Show(false);\n        },\n        complete: () => {  \n          \n          if(this.status.account)\n          {            \n            this.progressbar_Show(true, true);\n            this.loadingService.set_App_Loading(true);\n            window.location.reload();\n          }\n\n          this.fbGroup.reset();\n        }\n      }\n    );\n  }\n\n  create_Time_Delay(): void {\n    this.loginService.create_Time_SessionStorage();\n  }\n\n  // New PassWord\n  new_PassWord(): void {    \n    this.loginService.update(this.fbGroup.value).subscribe(\n      {\n        next: (res: boolean) => {                     \n          this.status.code = res;\n        },\n        error: (err) => {\n          this.status.system = false;\n          this.progressbar_Show(this.status.system);\n        },\n        complete: () => {  \n        \n          if(this.status.code)\n          {            \n            this.progressbar_Show(true, true);\n            this.counter();\n            this.reset_Forms();\n            this.fbGroup.reset();\n            this.create_Time_Delay();\n          }\n        }\n      }\n    );\n  }\n  \n  // Progressbar Show\n  progressbar_Show(status: boolean, complete?: boolean): void {\n\n    this.progressbar_View = true;\n\n    this.progressbar_Type = status ? 'success':'danger';\n\n    this.progressbar_Value = 25;\n\n    setTimeout(() => {\n      this.progressbar_Value = 50;\n    }, 600);\n\n    if(complete)\n    {\n      setTimeout(() => {\n        this.progressbar_Value = 100;\n      }, 1200);\n    }\n\n    setTimeout(() => {\n      this.progressbar_View = false;\n      this.progressbar_Value = 0;\n    }, 2800);\n  }\n\n  // Form Submit\n  onSubmit(): void {\n\n    this.reset_Status();\n\n    this.progressbar_Show(true);\n        \n    if(this.forms.email && this.fb_Value['newPassWord'].value == null)\n    {\n      this.get_IP();\n    }\n    else if (this.fb_Value['newPassWord'].value != null)\n    {\n      this.new_PassWord();\n    }\n    else\n    {      \n      this.login();\n    }\n  }\n\n  // Destroy\n  ngOnDestroy(): void {\n    this.iscounter.unsubscribe();\n  }\n}","<div class=\"container-sm d-flex align-items-center justify-content-center vh-100\">\n    <div class=\"row d-block\">\n        <ng-container *ngIf=\"progressbar_View\">\n            <!-- Progressbar -->\n            <div class=\"col mb-1\">\n                <div style=\"width: 18rem; margin-left: auto; margin-right: auto;\">\n                    <ngb-progressbar [showValue]=\"true\" [type]=\"progressbar_Type\" [value]=\"progressbar_Value\"\n                        [max]=\"100\">\n                    </ngb-progressbar>\n                </div>\n            </div>\n            <!-- /Progressbar -->\n        </ng-container>\n\n        <!-- Form -->\n        <div class=\"col shadow p-3 mb-5 bg-white rounded\">\n            <div class=\"card\" style=\"width: 18rem; margin-left: auto; margin-right: auto;\">\n                <!-- Card Header -->\n                <div class=\"card-body d-flex align-items-center flex-column\">\n                    <!-- Title -->\n                    <h1 class=\"card-title text-danger\">Tailyn</h1>\n                    <div class=\"alert-danger alert p-1 w-75 text-center mt-2\" role=\"alert\"\n                        [class.d-none]=\"(status.account) && (status.email) && (status.system) && (status.code) ? true : false\">\n                        <small class=\"form-text\" *ngIf=\"!status.account\">工號 或 密碼 錯誤</small>\n                        <small class=\"form-text\" *ngIf=\"!status.email\">工號 或 信箱 錯誤</small>\n                        <small class=\"form-text\" *ngIf=\"!status.system\">系統錯誤，稍後在試</small>\n                        <small class=\"form-text\" *ngIf=\"!status.code\">代碼輸入錯誤</small>\n                    </div>\n\n                    <ng-container *ngIf=\"forms.email && status.counter\">\n                        <div class=\"alert-warning alert p-1 w-75 text-center mt-2\" role=\"alert\">\n                            <small class=\"form-text\" *ngIf=\"status.counter\">{{status.counter}} 分鐘後再試</small>\n                        </div>\n                    </ng-container>\n                </div>\n                <!-- /Card Header -->\n\n                <!-- Card Body -->\n                <div class=\"card-body\">\n                    <form [formGroup]=\"fbGroup\" (ngSubmit)=\"onSubmit();\">\n                        <div class=\"form-group mb-2\">\n                            <label for=\"jNumber\">工號</label>\n                            <input type=\"text\" id=\"jNumber\" class=\"form-control mt-2\" formControlName=\"jNumber\"\n                                minlength=\"3\" maxlength=\"10\" required>\n                        </div>\n                        <ng-container *ngIf=\"forms.email else passWord_Input\">\n                            <fieldset [disabled]=\"status.counter\">\n                                <div class=\"form-group\">\n                                    <label for=\"email\">信箱</label>\n                                    <input type=\"email\" id=\"email\" class=\"form-control mt-2\" formControlName=\"email\"\n                                        minlength=\"6\" maxlength=\"40\" required>\n                                </div>\n                                <ng-container *ngIf=\"forms.code\">\n                                    <div class=\"form-group mb-2\">\n                                        <label for=\"newPassWord\">新密碼</label>\n                                        <div class=\"input-group input-group-md\">\n                                            <input [type]=\"'password'\" id=\"newPassWord\" class=\"form-control\"\n                                                formControlName=\"newPassWord\" minlength=\"3\" maxlength=\"20\"\n                                                autocomplete=\"false\" #newPassWord_Type>\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"\n                                                (click)=\"newPassWord_Type.type == 'text' ? newPassWord_Type.type = 'password': newPassWord_Type.type = 'text'\"\n                                                style=\"cursor: pointer;\">\n                                                <i [ngClass]=\"newPassWord_Type.type == 'password' ? 'bi bi-eye-slash-fill' : 'bi bi-eye-fill'\"></i>\n                                              </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"code\">代碼</label>\n                                        <input type=\"text\" id=\"code\" class=\"form-control mt-2\" formControlName=\"code\"\n                                            required>\n                                    </div>\n                                </ng-container>\n                            </fieldset>\n                        </ng-container>\n                        <!-- PassWord -->\n                        <ng-template #passWord_Input>\n                            <div class=\"form-group mb-2\">\n                                <label for=\"passWord\">密碼</label>\n                                <div class=\"input-group input-group-md\">\n                                    <input [type]=\"'passWord'\" id=\"passWord\" class=\"form-control\"\n                                        formControlName=\"passWord\" minlength=\"3\" maxlength=\"20\" autocomplete=\"false\"\n                                        #passWord_Type>\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"\n                                        (click)=\"passWord_Type.type == 'text' ? passWord_Type.type = 'password': passWord_Type.type = 'text'\"\n                                        style=\"cursor: pointer;\">\n                                        <i [ngClass]=\"passWord_Type.type == 'password' ? 'bi bi-eye-slash-fill' : 'bi bi-eye-fill'\"></i>\n                                      </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                        <!-- Footer -->\n                        <footer class=\"d-flex justify-content-between mt-3\">\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"toggle_Form()\">\n                                <ng-container *ngIf=\"forms.email; else btn_Email\">\n                                    返回\n                                </ng-container>\n                                <ng-template #btn_Email>\n                                    忘記密碼\n                                </ng-template>\n                            </button>\n\n                            <ng-container *ngIf=\"forms.email; else btn_Login\">\n                                <button type=\"submit\" class=\"btn btn-primary\"\n                                    [disabled]=\"(fb_Value['jNumber'].valid) && (fb_Value['newPassWord'].valid) && (fb_Value['email'].valid) && (fb_Value['code'].valid) && (status.counter == 0) ? false : true\">\n                                    送出\n                                </button>\n                            </ng-container>\n\n                            <ng-template #btn_Login>\n                                <button type=\"submit\" class=\"btn btn-primary\"\n                                    [disabled]=\"(fb_Value['jNumber'].valid) && (fb_Value['passWord'].valid) ? false : true\">\n                                    登入\n                                </button>\n                            </ng-template>\n                        </footer>\n                        <!-- /Footer -->\n                    </form>\n                </div>\n                <!-- /Card Body -->\n            </div>\n            <!-- /Form -->\n        </div>\n    </div>\n</div>\n\n<ng-template appAlerts></ng-template>\n","import { Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, SimpleChanges, TemplateRef, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertsDirective } from 'src/app/directives/alerts.directive';\nimport { Alerts } from 'src/app/interfaces/alerts';\nimport { Modal } from 'src/app/interfaces/modal';\nimport { ErrorValidators, InputValidators, Reset_Validators } from 'src/app/methods/input-validators';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n  public form: TemplateRef<any>;\n  public fbGroup: FormGroup;\n  public errorValidators: object = ErrorValidators;\n  public alerts: Alerts;\n  private undo_FbGroup: FormGroup;\n  // Modal \n  @ViewChild('modalForm') public modalForm: ElementRef<HTMLInputElement>;\n  @ViewChild('modalSM') public modalSM: ElementRef<HTMLInputElement>;\n\n  constructor(\n    private ngbModal: NgbModal,\n    private modalService: ModalService,\n    config: NgbModalConfig,\n    private alertService: AlertService,\n    private vref: ViewContainerRef,\n    private elementRef: ElementRef,\n    private _viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private loadingService: LoadingService,\n    private loginService : LoginService,\n    private employeeService: EmployeeService)\n    {\n      config.backdrop = 'static';\n      config.keyboard = false;\n    }\n\n  ngOnInit(): void {\n    this.modalService.get_FormGroup().subscribe(res => this.fbGroup = res);\n    this.modalService.get_modal().subscribe((res: Modal) => {\n      if(res.show)\n      {\n        if(res.status != 'delete')\n        {          \n          this.ngbModal.open(this.modalForm, {backdropClass: 'light-blue-backdrop', size: res.size, windowClass:'modal-holder'});\n        }\n        else\n        {\n          this.ngbModal.open(this.modalSM, {backdropClass: 'light-blue-backdrop', size: 'sm', windowClass:'modal-holder'});\n        }\n      }\n      else\n      {\n        this.close();\n      }\n    });\n    this.modalService.get_Form().subscribe(res => this.form = res);\n    this.alertService.get_Alert().subscribe(res => this.alerts = res);\n  }\n\n  ngAfterViewInit(): void {}\n\n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl} {\n    return this.fbGroup.controls;\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string} {\n    \n    // if(Number.isInteger(Object.values(this.fbGroup.value)))\n    // {\n    //   return Object.values(this.fbGroup.value).toString() || '';\n    // }\n\n    // return '0';\n    return Object.values(this.fbGroup.value) || '';\n  }\n  \n  // open(): void {        \n  //   const alertComponent = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n  //   this.alerts.viewContainerRef.clear();\n  //   const componentRef = this.alerts.viewContainerRef.createComponent(alertComponent);\n  //   componentRef.instance.messages = 'Nigo Chen';    \n  //   componentRef.instance.status =  true;  \n    \n    // secondChild\n    \n    // constructing new DOM after splitting\n    // this.errorChild.nativeElement.innerHTML = `\n    //   <div class=\"errors-head\">\n    //     <span class=\"number\">${splitted[0]}</span>\n    //     <span class=\"typo\">${splitted[1]}</span>\n    //   </div>\n    // `;\n\n\n    // this.modal_Content.((div: ElementRef) => console.log(div.nativeElement));\n    // this.vref.createEmbeddedView(this.form);\n\n    // this.ngbModal.open(this.modal, {backdropClass: 'light-blue-backdrop', size: 'md', windowClass:'modal-holder'},);\n        \n    \n    // this.ngbModal.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {  \n    //   this.closeResult = `Closed with: ${result}`;  \n    // }, (reason) => {  \n    //   this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;  \n    // }); \n    \n\n    // if (reason === ModalOfDismissReasons.ESC) {  \n    //   return 'by pressing ESC';  \n    // } else if (reason === ModalOfDismissReasons.BACKDROP_CLICK) {  \n    //   return 'by clicking on a backdrop';  \n    // } else {  \n    //   return  `with: ${reason}`;  \n    // }  \n  // }\n\n  close(): void {\n    this.ngbModal.dismissAll();\n    this.alertService.clear_Alert();\n  }\n\n  // Delete\n  delete(): void {\n    const id: number = parseInt(this.fb_Value_Index[0]);\n    this.modalService.set_Delete(id);\n    this.close();\n  }\n\n  // Save\n  save(): void {\n    if(this.fbGroup.valid && this.fb_Value_Index[0])\n    {      \n      this.modalService.set_Update(this.fbGroup);\n    }\n    else\n    {\n      this.modalService.set_Create(this.fbGroup);\n    }\n  }\n}\n","<!-- Modal Form -->\n<ng-template #modalForm let-modal>\n  <!-- Header -->\n  <div class=\"modal-header\" *ngIf=\"alerts\">\n    <!-- Alert -->\n    <ngb-alert [class.d-none]=\"!alerts.status\" *ngIf=\"alerts.status\" class=\"modal-title w-100 d-flex justify-content-center pt-3 pb-0\" [type]=\"alerts.type\"\n      (click)=\"alerts.status = !alerts.status\" animation=\"true\" [dismissible]=\"true\">\n      <p>{{ alerts.message }}</p>\n    </ngb-alert>\n    <!-- /Alert -->\n  </div>\n  <!-- /Header -->\n  <div class=\"modal-body\">\n    <!-- Form -->\n    <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n    <!-- /Form -->\n  </div>\n  <!-- Footer -->\n  <div class=\"modal-footer d-flex justify-content-between\">\n    <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"close()\">取消</button>\n    <button type=\"button\" [ngClass]=\"['btn btn-sm', fb_Value_Index[0] ? 'btn-outline-warning':'btn-outline-info']\" (click)=\"fbGroup.valid && save()\"\n      [disabled]=\"!fbGroup.valid\">確定</button>\n  </div>\n  <!-- /Footer -->\n</ng-template>\n<!-- /Modal Form -->\n\n<!-- Modal SM -->\n<ng-template #modalSM let-modal>\n  <!-- Header -->\n  <div class=\"modal-header\" *ngIf=\"alerts\">\n    <!-- Alert -->\n    <ngb-alert [class.d-none]=\"!alerts.status\" *ngIf=\"alerts.status\" class=\"modal-title w-100 d-flex justify-content-center pt-3 pb-0\" [type]=\"alerts.type\"\n      (click)=\"alerts.status = !alerts.status\" animation=\"true\" [dismissible]=\"true\">\n      <p>{{ alerts.message }}</p>\n    </ngb-alert>\n    <!-- /Alert -->\n  </div>\n  <!-- /Header -->\n  <div class=\"modal-body\">\n    <p class=\"text-danger text-center font-weight-bold font-italic\">\n      <u>\n        是否刪除以下資料?\n      </u>\n    </p>\n    <p class=\"text-truncate text-center h4 text-dark\">\n      <strong>{{fb_Value_Index[1]}}</strong>\n      <!-- {{fb_Value_Index[2]}} -->\n    </p>\n  </div>\n  <!-- Footer -->\n  <div class=\"modal-footer d-flex justify-content-between\">\n    <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"close()\">取消</button>\n    <!-- <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('Cross click')\">取消</button> -->\n    <button type=\"submit\" class=\"btn btn-outline-danger btn-sm\" (click)=\"delete()\" [disabled]=\"!fb_Value_Index[0]\">確定</button>\n  </div>\n  <!-- /Footer -->\n</ng-template>\n<!-- /Modal SM -->\n\n<!-- Alert -->\n<!-- <ng-container *ngTemplateOutlet=\"alert\"></ng-container>\n\n<ng-template #alert>\n  <div appAlerts></div>\n</ng-template> -->\n<!-- /Alert -->","import { DecimalPipe, ViewportScroller } from '@angular/common';\nimport { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { Modal } from 'src/app/interfaces/modal';\nimport { Repair } from 'src/app/interfaces/repair';\nimport { ErrorValidators, InputValidators, Reset_Validators } from 'src/app/methods/input-validators';\nimport { SplitePipe } from 'src/app/pipes/splite.pipe';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { RepairService } from 'src/app/services/repair.service';\n\n@Component({\n  selector: 'app-repair',\n  templateUrl: './repair.component.html',\n  styleUrls: ['./repair.component.scss'],\n  providers: [ SplitePipe, DecimalPipe ]\n})\nexport class RepairComponent implements OnInit {\n  // Form\n  @ViewChild('form_') form_: TemplateRef<HTMLElement>;\n  // Data\n  public result_Data: Repair[];\n  public result_List: Repair[];\n  // User\n  public user: Employee;\n  // FormGroup\n  public fbGroup: FormGroup;\n  // Input Validators blur\n  public inputValidators: Function = InputValidators;\n  // Input Validators Error\n  public errorValidators: object = ErrorValidators;\n  // Pagination\n  public page = 1;\n  public pageSize = 15;\n\n  constructor(\n    private loadingService: LoadingService,\n    private loginService: LoginService,\n    private repairService: RepairService,\n    private fb: FormBuilder,\n    private modalService: ModalService,\n    private alertService: AlertService)\n    {}\n\n  ngOnInit(): void {\n    this.default_FormGroup();\n    Reset_Validators(this.fbGroup);\n    this.result_Data = [];\n    this.result_List = [];\n    this.read();\n    this.user_Profile();\n    this.modal_Service();  \n  }\n\n  ngAfterViewInit(): void {\n    this.modalService.set_FormGroup(this.fbGroup);\n    this.modalService.set_Form(this.form_);\n  }\n\n  // Default FormGroup\n  default_FormGroup(): void {\n    this.fbGroup = this.fb.group({\n      r_Id: [null],\n      r_JobNumber: [null, Validators.required],\n      r_SerialNumber: [null, [Validators.required, Validators.maxLength(30)]],\n      r_WorkOrder: [null, [Validators.required, Validators.maxLength(30)]],\n      r_Model: [null, [Validators.required, Validators.maxLength(30)]],\n      r_Error: new FormArray([\n        new FormControl(null, [Validators.required, Validators.maxLength(30)]),\n        new FormControl(null, [Validators.required, Validators.maxLength(30)])\n      ]),\n      r_Process: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(50)])]),\n      r_Status: [null, [Validators.required, Validators.maxLength(10)]],\n      r_Client: new FormArray([\n        new FormControl(null, [Validators.required, Validators.maxLength(20)]),\n        new FormControl(null, [Validators.required, Validators.maxLength(20)])\n      ]),\n      r_Date: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(20)])]),\n      r_Dates: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(20)])]),\n      r_Minutes: new FormArray([new FormControl(0, [Validators.required, Validators.maxLength(3)])]),\n      r_MTotal: [null, Validators.max(700)]\n    });\n  }\n\n  // Modal Service\n  modal_Service(): void {\n    this.modalService.get_modal().subscribe((res: Modal) => this.reset_FormGroup(res.status));\n    this.modalService.get_Search().subscribe(res => this.search(res));\n    this.modalService.get_Create().subscribe(res => this.create(res));\n    this.modalService.get_Read().subscribe(res => this.read());\n    this.modalService.get_Update().subscribe(res => this.update(res));\n    this.modalService.get_Delete().subscribe(res => this.delete(res));\n  }\n\n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl } {\n    return this.fbGroup.controls;\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string } {\n    return Object.values(this.fbGroup.value) || '';\n  }\n\n  // FormGroup Reset\n  reset_FormGroup(status: string): void {   \n    if(status == 'create')\n    {\n      this.fbGroup.reset(\n        {\n          r_JobNumber: this.user.e_JobNumber,\n          r_Status: '待修',\n          r_MTotal: 0\n        }\n      );\n      // Reset FormArray Value\n      this.reset_FormArray();\n    }    \n    // Reset ErrorValidators Object\n    Reset_Validators(this.fbGroup);\n  }\n\n  // Reset FormArray\n  reset_FormArray(): void {  \n    Object.keys(this.fbGroup.value).forEach((key, i) => {\n\n      if(this.fb_Value[key].value instanceof Object)\n      {        \n        const validators: Validators = this.fb_Value[key].get('0').validator;\n\n        if(key == 'r_Dates')\n        {\n          const date: string = new Date().toISOString().slice(0, 10);\n          this.fbGroup.setControl(key, this.fb.array([this.fb.control(date, validators)]));\n          this.fbGroup.setControl('r_Date', this.fb.array([this.fb.control(`${date}=0`, validators)]));\n        }\n        else if(key == 'r_Process')\n        {\n          this.fbGroup.setControl(key, this.fb.array([this.fb.control(null, validators)]));\n        }\n        else if(key == 'r_Minutes')\n        {\n          this.fbGroup.setControl(key, this.fb.array([this.fb.control(0, validators)]));\n        }\n        else if(key == 'r_Error')\n        {\n          this.fbGroup.setControl(key, \n            this.fb.array([\n              this.fb.control(null, validators),\n              this.fb.control(null, validators)\n            ])\n          );\n        }\n        else if(key == 'r_Client')\n        {\n          this.fbGroup.setControl(key, \n            this.fb.array([\n              this.fb.control(null, validators),\n              this.fb.control(null, validators)\n            ])\n          );\n        }\n      }\n    });\n    \n    console.log(this.fbGroup.value);\n    \n  }\n\n  // Update FormArray Value\n  update_FormArray(index: number): void {\n    const array_Name: Array<string> = ['r_Date','r_Dates', 'r_Minutes', 'r_Process'];\n\n    if(index)\n    {\n      for(const name of array_Name)\n      {\n        // Delete Value\n        (<FormArray>this.fb_Value[name]).removeAt(index);\n        // Update FormArray\n        this.fbGroup.setControl(name, this.fb_Value[name]);\n      }\n    }\n    else if(this.fb_Value['r_Minutes'].value.length < 10)\n    {\n      for(const name of array_Name)\n      {\n        const validators: Validators = this.fb_Value[name].get('0').validator;  \n        \n        if(name == 'r_Dates')\n        {\n          const date: string = new Date().toISOString().slice(0, 10);\n          (<FormArray>this.fb_Value[name]).push(new FormControl(date, validators));\n        }\n        else if(name == 'r_Minutes')\n        {\n          (<FormArray>this.fb_Value[name]).push(new FormControl(0, validators));\n        }\n        else\n        {\n          (<FormArray>this.fb_Value[name]).push(new FormControl('', validators));\n        }\n      }\n    }\n    Reset_Validators(this.fbGroup, index);    \n  }\n\n  // Set FormArray Value\n  set_FormArray(item: Repair): void { \n    // const total:number = this.fb_Value['r_Date'].value.map(v => {\n    //   const str_Num: string = v.toString().replace(/(.*)=/,\"\");\n    //   return Number(str_Num);\n    // }).reduce((a: number, b: number) =>{\n    //   return a+b;\n    // });\n    // const total_Minutes: number = item.r_Date.split(',').map((v: string) => {\n    //   const arrays: Array<string> = v.split('=');\n\n    //   this.fb_Value['r_MTotal'].patchValue(arrays[0]);\n\n    //   const num: number = Number(arrays[1]);\n\n    //   this.fb_Value['r_Dates'].patchValue(num);\n\n    //   return num;\n    // }).reduce((a: number, b: number) =>{\n    //   return a+b;\n    // });\n    const array_Name: Array<string> = ['r_Dates','r_Minutes', 'r_Date', 'r_Process', 'r_Error', 'r_Client'];\n\n    for(const name of array_Name)\n    {      \n      const formArray: FormArray = new FormArray([]);\n      const validators: Validators = this.fb_Value[name].get('0').validator;   \n\n      if(name == 'r_Dates')\n      {\n        for(const val of item.r_Date.split(','))\n        {\n          const dates: string = val.split('=')[0];\n          formArray.push(new FormControl(dates, validators)); \n        }\n      }\n      else if(name == 'r_Minutes')\n      {\n        let total_Minutes: number = 0;\n\n        for(const val of item.r_Date.split(','))\n        {\n          const minutes: number = Number(val.split('=')[1]);\n          total_Minutes += minutes;\n          formArray.push(new FormControl(minutes, validators)); \n        }\n        // r_MTotal Value\n        this.fb_Value['r_MTotal'].patchValue(total_Minutes);\n      }\n      else if(name == 'r_Date')\n      {\n        for(const val of item.r_Date.split(','))\n        {\n          formArray.push(new FormControl(val, validators)); \n        }\n      }\n      else\n      {\n        for(const val of item[name].split(','))\n        {\n          formArray.push(new FormControl(val, validators));\n        }\n      }\n      // Update Controls\n      this.fbGroup.setControl(name, formArray);\n    }\n  }\n\n  // User Profile\n  user_Profile(): void {\n    let user_Session: Employee | null = this.loginService.read_User_SessionStorage();\n\n    if (user_Session)\n    {      \n        this.user = user_Session;\n    }\n  }\n\n  // Create\n  create(fg: FormGroup): void {\n\n    console.log(this.fbGroup.value);\n  \n    this.repairService.create(fg.value)\n      .subscribe(\n        {\n          next: (res: boolean) => {\n            if(res)\n            {\n              this.read();\n              this.modalService.set_modal({show: false});\n            }\n            else\n            {\n              this.alertService.set_Alert(22);\n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(23);\n          },\n          complete: () => {\n          }\n        }\n      );\n  }\n\n  // Read\n  read(): void {\n    this.repairService.read()\n      .subscribe(\n        {\n          next: (res: Repair[]) => {\n            if (res.length)\n            {                                         \n              this.result_Data = res;\n              this.result_List = res;\n              this.table_List_Sort();\n              this.refreshResult_List();              \n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(13);\n          },\n          complete: () => {\n            this.loadingService.set_Dashboard_Loading(false);\n          }\n        }\n      );\n  }\n\n  // Search\n  search(searchText: string): void {\n    this.result_List = this.result_Data.filter(res => {      \n      const term = searchText.toLowerCase();\n      return res.r_JobNumber.toLowerCase().includes(term)\n          || res.r_SerialNumber.includes(term)\n          || res.r_WorkOrder.toLowerCase().includes(term)\n          || res.r_Model.toLowerCase().includes(term)\n          || res.r_Status.includes(term)\n          || (res.r_Error.indexOf(term) > -1)\n          || (res.r_Client.indexOf(term) > -1)\n          || (res.r_Date.indexOf(term) > -1)\n    });\n  }\n\n  // Pagination\n  refreshResult_List() {\n    this.result_List = this.result_Data\n    .map((country, i) => ({id: i + 1, ...country}))\n    .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\n  }\n\n  // Table Short\n  table_List_Sort(name: string = 'w_Id', isAsc: boolean = false): void {    \n    this.result_List.sort((a:any, b:any) => {     \n      return (a[name] < b[name] ? -1 : 1) * (isAsc ? 1 : -1);\n    });    \n  }\n\n  // Update\n  update(fg: FormGroup): void {\n    this.repairService.create(fg.value)\n      .subscribe(\n        {\n          next: (res: boolean) => {\n            if (res)\n            {\n              this.read();\n              this.modalService.set_modal({show: false});\n            }\n            else\n            {\n              this.alertService.set_Alert(32);\n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(33);\n          },\n          complete: () => {\n          }\n        }\n      );\n  }\n\n  // Delete\n  delete(id: number): void {\n    this.repairService.delete(id)\n      .subscribe(\n        {\n          next: (res: boolean) => {\n            if (res)\n            {\n              this.read();\n              this.modalService.set_modal({show: false});\n            }\n            else\n            {\n              this.alertService.set_Alert(42);\n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(43);\n          }\n        }\n      );\n  }\n\n  // choose\n  choose(item: Repair): void {     \n    this.fbGroup.patchValue({\n      r_Id: item.r_Id,\n      r_JobNumber: item.r_JobNumber,\n      r_SerialNumber: item.r_SerialNumber,\n      r_WorkOrder: item.r_WorkOrder,\n      r_Model: item.r_Model,\n      r_Status: item.r_Status\n    });\n    // FormArray Value\n    this.set_FormArray(item);\n    // Update Modal FormGroup\n    this.modalService.set_FormGroup(this.fbGroup);        \n  }\n\n  // DateTimePick Value Chekc\n  onValue_Check(id: string, index: number): string {\n    let values: string = this.fb_Value[id].value;\n    return values.length > 15 ? values.split(',')[index] : '';\n  }\n\n  // DateTime Replace Value\n  datetim_Replace(value: string): string {\n    const timestamp = value.replace('T', ' ');\n    let datetime = timestamp.replace('/','-');\n    return value ? `${datetime}`: '';\n  }\n\n  // Date Event\n  date_Change(event: HTMLInputElement): void {\n    const controls: string = event.id;  \n    const value = this.datetim_Replace(event.value);\n    // Update r_Dates Value\n    this.fb_Value['r_Dates'].get(controls).patchValue(value);\n    // Get r_Minutes Value\n    const minutes: string = this.fb_Value['r_Minutes'].get(controls).value.toString();\n    // string value\n    const result: string = `${value}=${minutes}`;\n    // Update r_Date Value\n    this.fb_Value['r_Date'].get(controls).patchValue(result);\n  }\n\n  // Minutes Total\n  minute_Change(index: number): void {       \n    const controls: string = index.toString();\n    const dates = this.fb_Value['r_Dates'].get(controls).value;\n    const minutes = this.fb_Value['r_Minutes'].get(controls).value;\n    // Get Minutes Total\n    const total_Minutes = this.fb_Value['r_Minutes'].value.reduce((a:any, b:any) => a + b, 0);\n\n    if(!this.fb_Value['r_MTotal'].hasError('max'))\n    {\n      // string value\n      const result: string = `${dates}=${minutes}`;\n      // Update r_Date Value\n      this.fb_Value['r_Date'].get(controls).patchValue(result);\n    }\n    else\n    {\n      this.fb_Value['r_Minutes'].get(controls).patchValue(0);\n    }\n\n    // Update r_MTotal Value\n    this.fb_Value['r_MTotal'].patchValue(total_Minutes);\n  }\n\n  // Destroy\n  ngOnDestroy(): void {\n    this.modalService.set_FormGroup(null);\n  }\n}\n","<!-- Form -->\n<div class=\"container-lg border border-dark p-2 mt-2 mb-2\">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor, nam.\n</div>\n<!-- /Form -->\n\n<!-- Grid Table -->\n<div class=\"grid-container\" [ngStyle]=\"{'align-items': result_List.length > 5 ? 'stretch':'start'}\">\n  <div class=\"grid-header\">\n    <div>#</div>\n    <div>工號</div>\n    <div>客戶</div>\n    <div>序號</div>\n    <div>工單</div>\n    <div>機種</div>\n    <div>不良原因</div>\n    <div>查修過程</div>\n    <div>日期工時</div>\n    <div>狀態</div>\n  </div>\n  <div class=\"grid-body\">\n    <div class=\"grid-content\" *ngFor=\"let item of result_List; let i = index\" (click)=\"user.e_Lv > 1 && choose(item)\"\n      [ngClass]=\"{'grid-selected': item?.r_Id == fb_Value_Index[0]}\">\n      <div>{{i+1}}</div>\n      <div>\n        <span>\n          {{ item.r_JobNumber }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.r_Client }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.r_SerialNumber }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.r_WorkOrder }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.r_Model }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.r_Error | splite:0 }} {{ item.r_Error | splite:1 }}\n        </span>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.r_Process.split(','); let y = index\">\n          <span>\n            {{ item.r_Process | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.r_Date.split(','); let y = index\">\n          <span>\n            {{ item.r_Date | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        <span>\n          {{ item.r_Status }}\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- /Grid Table -->\n\n<!-- Pagination -->\n<!-- <div class=\"d-flex justify-content-center pagination pagination-sm mt-2\">\n    <ngb-pagination [collectionSize]=\"result_Data.length\" [(page)]=\"page\" [pageSize]=\"pageSize\" [maxSize]=\"100\" [rotate]=\"true\"\n      [boundaryLinks]=\"true\" (pageChange)=\"refreshResult_List()\"></ngb-pagination>\n  </div> -->\n<!-- /Pagination -->\n\n<ng-template #form_>\n  <!-- Form -->\n  <form [formGroup]=\"fbGroup\" #form=\"ngForm\">\n    <div class=\"form-row border border-dark mb-1\">\n      <div class=\"form-row col-12 text-center position-relative\">\n        <!-- Serial Number -->\n        <div class=\"form-group col-3 mb-1\" formArrayName=\"r_Client\">\n          <label [class.text-danger]=\"errorValidators['r_Client'][0].length && true\">\n            {{ errorValidators['r_Client'][0].length ? errorValidators['r_Client'][0] : \"客戶代碼\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"0\" placeholder=\"客戶代碼\"\n            (blur)=\"inputValidators(fbGroup, 'r_Client')\">\n        </div>\n        <!-- Serial Number -->\n        <div class=\"form-group col-4 mb-1\" formArrayName=\"r_Client\">\n          <label [class.text-danger]=\"errorValidators['r_Client'][1].length && true\">\n            {{ errorValidators['r_Client'][1].length ? errorValidators['r_Client'][1] : \"客戶\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"1\" placeholder=\"客戶\"\n            (blur)=\"inputValidators(fbGroup, 'r_Client')\">\n        </div>\n        <!-- Status -->\n        <div class=\"form-group col-3 mb-1\">\n          <label [class.text-danger]=\"errorValidators['r_Status'].length && true\">\n            {{ errorValidators['r_Status'].length ? errorValidators['r_Status'] : \"狀態\" }}\n          </label>\n\n          <input class=\"form-control form-control-sm text-center\" formControlName=\"r_Status\" list=\"r_Status\"\n            placeholder=\"狀態\" (blur)=\"inputValidators(fbGroup, 'r_Status')\">\n          <datalist id=\"r_Status\">\n            <option value=\"待修\">\n            <option value=\"完修\">\n            <option value=\"報廢\">\n            <option value=\"待測\">\n          </datalist>\n        </div>\n        <!-- MTotal -->\n        <div class=\"form-group col-2 mb-1\">\n          <label [class.text-danger]=\"fb_Value['r_MTotal'].errors && true\">\n            {{ fb_Value['r_MTotal'].errors ? \"超時\" : \"工時\" }}\n          </label>\n          <div class=\"form-control form-control-sm text-center\">\n            {{ fb_Value['r_MTotal'].value }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-row border border-dark mb-1\">\n      <div class=\"form-row col-12 text-center position-relative\">\n        <!-- Serial Number -->\n        <div class=\"form-group col-4 mb-1\" formArrayName=\"r_Error\">\n          <label [class.text-danger]=\"errorValidators['r_Error'][0].length && true\">\n            {{ errorValidators['r_Error'][0].length ? errorValidators['r_Error'][0] : \"不良代碼\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"0\" placeholder=\"不良代碼\"\n            (blur)=\"inputValidators(fbGroup, 'r_Error')\">\n        </div>\n        <!-- Serial Number -->\n        <div class=\"form-group col-8 mb-1\" formArrayName=\"r_Error\">\n          <label [class.text-danger]=\"errorValidators['r_Error'][1].length && true\">\n            {{ errorValidators['r_Error'][1].length ? errorValidators['r_Error'][1] : \"不良原因\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"1\" placeholder=\"不良原因\"\n            (blur)=\"inputValidators(fbGroup, 'r_Error')\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-row border border-dark mb-1\">\n      <div class=\"form-row col-12 text-center position-relative\">\n        <!-- workOrder -->\n        <div class=\"form-group col mb-1\">\n          <label [class.text-danger]=\"errorValidators['r_WorkOrder'].length && true\">\n            {{ errorValidators['r_WorkOrder'].length ? errorValidators['r_WorkOrder'] : \"工單\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"r_WorkOrder\"\n            placeholder=\"工單\" (blur)=\"inputValidators(fbGroup, 'r_WorkOrder')\">\n        </div>\n        <!-- Model -->\n        <div class=\"form-group col mb-1\">\n          <label [class.text-danger]=\"errorValidators['r_Model'].length && true\">\n            {{ errorValidators['r_Model'].length ? errorValidators['r_Model'] : \"機種\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"r_Model\" placeholder=\"機種\"\n            (blur)=\"inputValidators(fbGroup, 'r_Model')\">\n        </div>\n        <!-- Serial Number -->\n        <div class=\"form-group col mb-1\">\n          <label [class.text-danger]=\"errorValidators['r_SerialNumber'].length && true\">\n            {{ errorValidators['r_SerialNumber'].length ? errorValidators['r_SerialNumber'] : \"序號\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" formControlName=\"r_SerialNumber\"\n            placeholder=\"序號\" (blur)=\"inputValidators(fbGroup, 'r_SerialNumber')\">\n        </div>\n      </div>\n    </div>\n    <!-- FormArray -->\n    <div class=\"form-row scroll-auto-hide\">\n\n    <div class=\"form-row border border-dark text-center mb-1 scroll-auto-hide\"\n      *ngFor=\"let val of [].constructor(fb_Value['r_Date'].value.length) let i = index\">\n      <div class=\"form-row col-12 position-relative\">\n        <!-- Icon Btn Group -->\n        <div class=\"form-icon-group\">\n          <!-- Badge Number -->\n          <b class=\"text-dark\">{{i+1}}</b>\n          <!-- Icon Button -->\n          <i [ngClass]=\"['bi', i>0 ? 'text-danger bi-dash-square' : 'text-info bi-plus-square']\"\n            [title]=\"i>0 ? '刪除':'新增'\" (click)=\"update_FormArray(i)\">\n          </i>\n        </div>\n        <!-- Dates -->\n        <div class=\"form-group col-6 mb-1\" formArrayName=\"r_Dates\">\n          <label [class.text-danger]=\"errorValidators['r_Dates'][i].length && true\">\n            {{ errorValidators['r_Dates'][i].length ? errorValidators['r_Dates'][i] : \"查修日期\" }}\n          </label>\n          <input type=\"date\" [id]=\"i\" class=\"form-control form-control-sm text-center\" [formControlName]=\"i\"\n            (input)=\"date_Change($event.target)\">\n        </div>\n        <!-- Minutes -->\n        <div class=\"form-group col-6 mb-1\" formArrayName=\"r_Minutes\">\n          <label [class.text-danger]=\"errorValidators['r_Minutes'][i] && true\">\n            {{ errorValidators['r_Minutes'][i].length ? errorValidators['r_Minutes'][i] : \"查修時間\" }}\n          </label>\n          <div class=\"input-group\">\n            <input type=\"number\" id=\"r_Minutes\" class=\"form-control form-control-sm text-center\" step=\"10\" min=\"0\"\n              max=\"470\" [formControlName]=\"i\" (input)=\"minute_Change(i)\">\n            <div class=\"input-group-prepend\">\n              <i class=\"bi bi-clock input-group-text bg-white\"></i>\n            </div>\n          </div>\n        </div>\n        <!-- Process -->\n        <div class=\"form-group col-12 mb-1\" formArrayName=\"r_Process\">\n          <label [class.text-danger]=\"errorValidators['r_Process'][i].length && true\">\n            {{ errorValidators['r_Process'][i].length ? errorValidators['r_Process'][i] : \"查修過程/備註\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" [formControlName]=\"i\"\n            (blur)=\"inputValidators(fbGroup, 'r_Process')\">\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  </form>\n  <!-- /Form -->\n</ng-template>","import { Component, ElementRef, EventEmitter, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Event, NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { NgbModal, NgbRatingConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Alert } from 'selenium-webdriver';\nimport { Alerts } from 'src/app/interfaces/alerts';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { ErrorValidators, InputValidators, Reset_Validators } from 'src/app/methods/input-validators';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ModalService } from 'src/app/services/modal.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  // Form\n  @ViewChild('form_') form_: TemplateRef<HTMLElement>;\n  // User\n  public user: Employee;\n  // Form Controls\n  public form_Controls: object = {\n    e_Id: [''],\n    e_Name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z\\u4e00-\\u9fa5]{2,10}$/)]],\n    e_JobNumber: ['', [Validators.required, Validators.pattern(/^[0-9]{3,5}$/)]],\n    e_PassWord: [''],\n    e_Email: ['', [Validators.required, Validators.maxLength(30), Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n    e_Date: this.fb.array([this.fb.control('', Validators.required)]),\n    e_Lv: ['', [Validators.required, Validators.maxLength(1)]]\n  }\n  // FormGroup\n  public fbGroup: FormGroup = this.fb.group(this.form_Controls);\n  // Input Validators blur\n  public inputValidators: Function = InputValidators;\n  // Input Validators Error\n  public errorValidators: object = ErrorValidators;\n  // Aert\n  public alerts: Alerts;\n  // Modal \n  @ViewChild('modalForm') public modalForm: ElementRef<HTMLInputElement>;\n\n  constructor(\n    private loginService: LoginService,\n    private fb: FormBuilder,\n    private employeeService: EmployeeService,\n    private alertService: AlertService,\n    private ngbRatingConfig: NgbRatingConfig,\n    private router: Router,\n    private elementRef: ElementRef,\n    private ngbModal: NgbModal)\n    {\n      ngbRatingConfig.max = 3;\n      ngbRatingConfig.readonly = true;\n    }\n\n  ngOnInit(): void {\n    this.user_Profile();\n    this.alertService.get_Alert().subscribe(res => {this.alerts = res});\n  }\n\n  ngAfterViewInit() {\n    this.menu_Link_Style();\n  }\n\n  // Menu Link Style\n  menu_Link_Style(): void {\n    let navLink = this.elementRef.nativeElement.querySelectorAll('.nav-link')[0];\n    \n    // Page Reload Check Url\n    // if(this.router.url.includes('/Tailyn'))\n    if(this.router.url == '/Tailyn')\n    {\n      navLink.classList.add('text-danger', 'font-weight-bold');\n    }\n    else\n    {\n      navLink.classList.remove('text-danger', 'font-weight-bold');\n    }\n\n    // When routerLinkActive\n    this.router.events.subscribe((event: Event) => {\n      \n      if(event instanceof NavigationStart)\n      {\n        if(event.url == '/Tailyn' || event.url == '/')\n        {\n          navLink.classList.add('text-danger', 'font-weight-bold');            \n        }\n        else\n        {\n          navLink.classList.remove('text-danger', 'font-weight-bold');\n        }\n      }\n\n      if (event instanceof NavigationEnd)\n      {\n\n      }\n    });    \n    // Only page reload\n    // this.activatedRoute.data.subscribe(data => {\n    //     console.log(data);\n        \n    // });\n\n    // Only page reload\n    // this.activatedRoute.firstChild.data.subscribe(data => {\n    //     console.log(data);\n        \n    // });\n  }\n\n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl} {\n    return this.fbGroup.controls;\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string} {\n    return Object.values(this.fbGroup.value) || '';\n  }\n  // User Profile\n  user_Profile(): void {\n    let user_Session: Employee | null = this.loginService.read_User_SessionStorage();\n    \n    if (user_Session != null)\n    {\n        this.user = user_Session;\n    }\n    else\n    {\n      this.logout();\n    }\n  }\n  \n  // Update\n  show_Modal(): void { \n    Reset_Validators(this.fbGroup);\n    this.set_FormGroup_Val();\n    this.ngbModal.open(this.modalForm, {backdropClass: 'light-blue-backdrop', size: 'sm', windowClass:'modal-holder'});\n  }\n\n  update(): void {    \n    this.employeeService.update(this.fbGroup.value)\n    .subscribe(\n      {\n        next: (res: boolean) => {\n          if(res)\n          {            \n            const dateString: string = this.fb_Value['e_Date'].value.toString();\n            this.fbGroup.setControl('e_Date',this.fb.control(dateString));            \n            this.loginService.create_User_SessionStorage(this.fbGroup.value);\n            this.close();\n          }\n          else\n          {\n            this.alertService.set_Alert(32);\n          }\n        },\n        error: (err) => {          \n          this.alertService.set_Alert(33);\n        },\n        complete: () => {          \n          this.alertService.clear_Alert();\n          this.user = this.loginService.read_User_SessionStorage();          \n        }\n      }\n    )\n  }\n\n  close(): void {\n    this.ngbModal.dismissAll();\n    this.alertService.clear_Alert();\n  }\n\n  // FormGroup Reset\n  reset_FormGroup(status: string): void {     \n    if(status == 'update')\n    {\n      this.fb_Value['e_PassWord'].setValidators(null);\n      this.fb_Value['e_PassWord'].updateValueAndValidity();\n      this.fb_Value['e_ConfirmPassword'].setValidators(null);\n      this.fb_Value['e_ConfirmPassword'].updateValueAndValidity();\n    }\n    Reset_Validators(this.fbGroup);\n  }\n\n  // Update FormArray Value\n  set_FormGroup_Val(): void { \n    // User SessionStorage         \n    const user:Employee = this.loginService.read_User_SessionStorage();\n    // Reset FormGroup\n    this.fbGroup.patchValue({\n      e_Id: user.e_Id,\n      e_Name: user.e_Name,\n      e_Email: user.e_Email,\n      e_PassWord: user.e_PassWord\n    });\n    // Disabled\n    const isDisabled: boolean = this.user.e_Lv == 3 ? false : true;\n    // e_Lv\n    const lv_validators: Validators = this.fb_Value['e_Lv'].validator;      \n    this.fbGroup.setControl('e_Lv', this.fb.control({value: user.e_Lv, disabled: isDisabled},lv_validators));\n    // e_JobNumber\n    const job_validators: Validators = this.fb_Value['e_JobNumber'].validator;      \n    this.fbGroup.setControl('e_JobNumber', this.fb.control({value: user.e_JobNumber, disabled: isDisabled},job_validators));\n    // Date Value\n    const dataArray: Array<string> = user.e_Date.split(',');\n        \n    if(dataArray.length == 4)\n    {\n      const date_validators: Validators = this.fb_Value['e_Date'].get('0').validator;      \n\n      this.fbGroup.setControl('e_Date', this.fb.array([\n        this.fb.control({value: dataArray[0], disabled: isDisabled},date_validators),\n        this.fb.control({value: dataArray[1], disabled: isDisabled},date_validators),\n        this.fb.control({value: dataArray[2], disabled: isDisabled},date_validators),\n        this.fb.control({value: dataArray[3], disabled: isDisabled},date_validators),\n      ]));   \n    }    \n  }\n\n  // DateTimePick Value Chekc\n  onValue_Check(id: string, index: number): string {\n    let values: string = this.fb_Value[id].value;\n    return values.length > 18 ? values.split(',')[index] : '';\n  }\n\n  // DateTimePick Value\n  onValue(id: string): string {\n\n    let values: any = '';\n\n    if(this.fb_Value_Index[0])\n    {      \n      if(id == 'Sdate')\n      {\n        values = this.onValue_Check('Sdate', 0); \n      }\n      else\n      {\n        values = this.onValue_Check('Edate', 1); \n      }\n    }\n    else\n    {\n      // Default DateTime\n      const today: string = new Date().toISOString().slice(0, 10);\n      values = this.datetim_Replace(today);\n      this.onDate_Check('e_Date', values, 0);\n      this.onDate_Check('e_Date', values, 1);\n    }\n    \n    if(values.length == 19)\n    {\n      values = values.replace(' ', 'T');\n      // substring skip second value\n      return values.substring(0, 16);\n    }\n\n    return values;\n  }\n\n  // DateTime Replace Value\n  datetim_Replace(value: string): string {\n    const timestamp = value.replace('T', ' ');\n    let datetime = timestamp.replace('/','-');\n    return value ? datetime : '';\n  }\n\n  // Check VALUE\n  onDate_Check(name: string, value: string, index: number): void {    \n        \n    let choose_Value: Array<string> = this.fb_Value[name].value;\n    choose_Value[index] = '';\n    choose_Value[2] = '0';\n    choose_Value[3] = '0';\n\n    if(value.length)\n    {\n      // Date Index\n      choose_Value[index] = value;\n      // Total minutes for array index 2\n      choose_Value = this.dateTime_Count(choose_Value);\n    }\n\n    // Update FormGroup Controls Value\n    for(let i=0; i<choose_Value.length; i++)\n    {      \n      this.fb_Value['e_Date'].get(''+i).patchValue(choose_Value[i]);\n    }        \n  }\n\n  // DateTimePick Event\n  onDate(event: HTMLInputElement): void {\n    const id: string = event.id;\n    const index: number = id == 'Sdate' ? 0 : 1;    \n    const value: string = this.datetim_Replace(event.value);    \n    this.onDate_Check('e_Date', value, index);\n  }\n\n  // DataTime Minutes Count\n  dateTime_Count(data: Array<string>): Array<string> {\n      const start: any    = new Date(data[0]);\n      const end: any      = new Date(data[1]);\n      const total: number = Math.abs(end-start);      \n      const year: number  = total / (1000 * 3600 * 24 * 365);\n      const month: number = year * 10;\n      data[2] = year.toString().split('.')[0];\n      data[3] = month.toFixed();      \n      return data;\n  }\n\n  // Logout\n  logout(): void {\n    this.loginService.logout();\n  }\n}\n","<div class=\"d-flex sidebar\">\n  <ul class=\"nav px-1\">\n    <li class=\"nav-item text-nowrap\">\n      <a class=\"nav-link\" routerLink=\"/\" title=\"首頁\">\n        <i class=\"bi bi-house-door-fill\"></i>\n        首頁\n      </a>\n    </li>\n    <li class=\"nav-item text-nowrap\">\n      <a class=\"nav-link\" routerLink=\"Work\" routerLinkActive=\"text-danger font-weight-bold\" title=\"工時\">\n        <i class=\"bi bi-calculator-fill\"></i>\n        工時\n      </a>\n    </li>\n    <li class=\"nav-item text-nowrap\">\n      <a class=\"nav-link\" routerLink=\"Repair\" routerLinkActive=\"text-danger font-weight-bold\" title=\"維修\">\n        <i class=\"bi bi-hammer\"></i>\n        維修\n      </a>\n    </li>\n    <li class=\"nav-item text-nowrap\">\n      <a class=\"nav-link\" routerLink=\"Employee\" routerLinkActive=\"text-danger font-weight-bold\" title=\"員工\">\n        <i class=\"bi bi-file-earmark-person\"></i>\n        員工\n      </a>\n    </li>\n  </ul>\n  <ul class=\"nav px-3\">\n    <li class=\"nav-item text-nowrap\">\n      <div ngbDropdown class=\"d-inline-block\" display=\"dynamic\">\n        <a class=\"nav-link text-white\" id=\"dropdownBasic1\" ngbDropdownToggle>\n          <i class=\"bi bi-person-circle\"></i>\n          <span class=\"p-1\">{{ user.e_JobNumber }}</span>\n        </a>\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"shadow header_DropMenu bg-dark\">\n          <button ngbDropdownItem class=\"text-center mb-3\" (click)=\"show_Modal()\">{{ user.e_Name }}</button>\n          <button ngbDropdownItem class=\"text-center\" (click)=\"logout()\">登出</button>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n\n<!-- Modal Form -->\n<ng-template #modalForm let-modal>\n  <!-- Header -->\n  <div class=\"modal-header\" *ngIf=\"alerts\">\n    <!-- Alert -->\n    <ngb-alert [class.d-none]=\"!alerts.status\" *ngIf=\"alerts.status\"\n      class=\"modal-title w-100 d-flex justify-content-center pt-3 pb-0\" [type]=\"alerts.type\"\n      (click)=\"alerts.status = !alerts.status\" animation=\"true\" [dismissible]=\"true\">\n      <p>{{ alerts.message }}</p>\n    </ngb-alert>\n    <!-- /Alert -->\n  </div>\n  <!-- /Header -->\n  <div class=\"modal-body\">\n    <!-- Form -->\n    <form [formGroup]=\"fbGroup\" #form=\"ngForm\">\n      <!-- Name -->\n      <div class=\"form-group row\">\n        <label for=\"name\"\n          [ngClass]=\"['col-3 col-form-label text-center pl-1 pr-1', errorValidators['e_Name'].length ? 'text-danger' : '']\">\n          {{ errorValidators['e_Name'].length ? errorValidators['e_Name'] : \"姓名\" }}\n        </label>\n        <div class=\"col pl-2 pr-1\">\n          <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"e_Name\" placeholder=\"姓名\"\n            (blur)=\"inputValidators(fbGroup, 'e_Name')\">\n        </div>\n      </div>\n      <!-- Job Number -->\n      <div class=\"form-group row\">\n        <label for=\"jobNumber\"\n          [ngClass]=\"['col-3 col-form-label text-center pl-1 pr-1', errorValidators['e_JobNumber'].length ? 'text-danger' : '']\">\n          {{ errorValidators['e_JobNumber'].length ? errorValidators['e_JobNumber'] : \"工號\" }}\n        </label>\n        <div class=\"col pl-2 pr-1\">\n          <input type=\"text\" id=\"jobNumber\" class=\"form-control\" formControlName=\"e_JobNumber\" placeholder=\"工號\"\n            (blur)=\"inputValidators(fbGroup, 'e_JobNumber')\" [readonly]=\"user.e_Lv < 3\">\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"form-group row\">\n        <label for=\"passWord\"\n          [ngClass]=\"['col-3 col-form-label text-center pl-1 pr-1', errorValidators['e_PassWord'].length ? 'text-danger' : '']\">\n          {{ errorValidators['e_PassWord'].length ? errorValidators['e_PassWord'] : \"密碼\" }}\n        </label>\n        <div class=\"col pl-2 pr-1\">\n          <div class=\"input-group input-group-md\">\n            <input type=\"password\" id=\"passWord\" class=\"form-control\" formControlName=\"e_PassWord\" placeholder=\"密碼\"\n              (blur)=\"inputValidators(fbGroup, 'e_PassWord')\" autocomplete=\"false\" #passWord_Type>\n\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"\n                (click)=\"passWord_Type.type == 'text' ? passWord_Type.type = 'password': passWord_Type.type = 'text'\">\n                <i [ngClass]=\"passWord_Type.type == 'password' ? 'bi bi-eye-slash-fill' : 'bi bi-eye-fill'\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Email -->\n      <div class=\"form-group row\">\n        <label for=\"email\"\n          [ngClass]=\"['col-3 col-form-label text-center pl-1 pr-1', errorValidators['e_Email'].length ? 'text-danger' : '']\">\n          {{ errorValidators['e_Email'].length ? errorValidators['e_Email'] : \"信箱\" }}\n        </label>\n\n        <div class=\"col pl-2 pr-1\">\n          <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"e_Email\" placeholder=\"信箱\"\n            (blur)=\"inputValidators(fbGroup, 'e_Email')\">\n        </div>\n      </div>\n      <!-- Level -->\n      <div class=\"form-group row\">\n        <label for=\"lv\" class=\"col-3 col-form-label text-center pl-1 pr-1\">權限</label>\n\n        <div class=\"col-3\">\n          <ngb-rating [rate]=\"fb_Value['e_Lv'].value\" readonly=\"true\" class=\"h4\"></ngb-rating>\n        </div>\n\n        <div class=\"col-5 pl-2 pr-1\">\n          <select id=\"lv\" class=\"form-control text-center custom-select\" formControlName=\"e_Lv\">\n            <option [value]=\"0\">\n              停權\n            </option>\n            <option [value]=\"1\">\n              普通\n            </option>\n            <option [value]=\"2\">\n              中級\n            </option>\n            <option [value]=\"3\">\n              高級\n            </option>\n          </select>\n        </div>\n      </div>\n      <!-- Date Start-->\n      <div class=\"form-group row\" formArrayName=\"e_Date\">\n        <label for=\"Sdate\" class=\"col-3 col-form-label text-center pl-1 pr-1\">入職</label>\n        <div class=\"col pl-2 pr-1\">\n          <div class=\"form-control border-0\" *ngIf=\"this.fb_Value['e_Date'].disabled; else Sdate\">\n            {{ this.fb_Value['e_Date'].get('0').value }}\n          </div>\n\n          <ng-template #Sdate>\n            <input type=\"date\" id=\"Sdate\" class=\"form-control\" formControlName=\"0\" (input)=\"onDate($event.target)\"\n              (blur)=\"inputValidators(fbGroup, 'e_Date', 0)\">\n          </ng-template>\n        </div>\n      </div>\n      <!-- Date End-->\n      <div class=\"form-group row\" formArrayName=\"e_Date\">\n        <label for=\"Edate\" class=\"col-3 col-form-label text-center pl-1 pr-1\">在職</label>\n        <div class=\"col pl-2 pr-1\">\n\n          <div class=\"form-control border-0\" *ngIf=\"this.fb_Value['e_Date'].disabled; else Edate\">\n            {{ this.fb_Value['e_Date'].get('1').value }}\n          </div>\n\n          <ng-template #Edate>\n            <input type=\"date\" id=\"Edate\" class=\"form-control\" formControlName=\"1\" (input)=\"onDate($event.target)\"\n              (blur)=\"inputValidators(fbGroup, 'e_Date', 1)\">\n          </ng-template>\n        </div>\n      </div>\n    </form>\n    <!-- /Form -->\n  </div>\n  <!-- Footer -->\n  <div class=\"modal-footer d-flex justify-content-between\">\n    <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"close()\">取消</button>\n    <button type=\"button\" [ngClass]=\"['btn btn-sm', fb_Value_Index[0] ? 'btn-outline-warning':'btn-outline-info']\"\n      (click)=\"update()\" [disabled]=\"!fbGroup.valid\">確定</button>\n  </div>\n  <!-- /Footer -->\n</ng-template>\n<!-- /Modal Form -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.scss']\n})\nexport class TutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tutorial works!</p>\n","import { AfterViewInit, Component, ElementRef, HostListener, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { WorkHours } from 'src/app/interfaces/work-hours';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { ErrorValidators, InputValidators, Reset_Validators } from 'src/app/methods/input-validators';\nimport { LoginService } from 'src/app/services/login.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { WorkHoursService } from 'src/app/services/work-hours.service';\nimport { NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { StandService } from 'src/app/services/stand.service';\nimport { Observable } from 'rxjs';\nimport { Stand } from 'src/app/interfaces/stand';\nimport { SplitePipe } from 'src/app/pipes/splite.pipe';\nimport { DecimalPipe } from '@angular/common';\nimport { Modal } from 'src/app/interfaces/modal';\nimport { Employee } from 'src/app/interfaces/employee';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.scss'],\n  providers: [ SplitePipe, DecimalPipe ]\n})\nexport class WorkComponent implements OnInit, AfterViewInit {\n  // Form\n  @ViewChild('form_') form_: TemplateRef<HTMLElement>;\n  // Data\n  public result_Data: WorkHours[];\n  public result_List: WorkHours[];\n  // User\n  public user: Employee;\n  // FormGroup\n  public fbGroup: FormGroup;\n  // Input Validators blur\n  public inputValidators: Function = InputValidators;\n  // Input Validators Error\n  public errorValidators: object = ErrorValidators;\n  // Stand Data List\n  public standList$: Observable<Array<Stand>> | Observable<[]>;\n  // Timezone\n  public getTimezoneOffset: number = (new Date()).getTimezoneOffset() * 60000;\n  // DateTime\n  public dateTime: any = (new Date(Date.now() - this.getTimezoneOffset)).toISOString().slice(0, -8);\n  public dateTime_Min: string = (new Date(new Date().setDate(new Date().getDate() - 5))).toISOString().slice(0, -8);\n  public dateTime_Max: string = (new Date(new Date().setDate(new Date().getDate() + 5))).toISOString().slice(0, -8);\n  // Pagination\n  public page = 1;\n  public pageSize = 15;\n\n  constructor(\n    private loadingService: LoadingService,\n    private loginService: LoginService,\n    private workHoursService: WorkHoursService,\n    private standService: StandService,\n    private fb: FormBuilder,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private calendar: NgbCalendar,\n    private elementRef: ElementRef,\n    private decimalPipe: DecimalPipe)\n    {}\n\n  ngOnInit(): void {\n    this.default_FormGroup();\n    Reset_Validators(this.fbGroup);\n    this.result_Data = [];\n    this.result_List = [];\n    this.read();\n    this.user_Profile();\n    this.standList$ = this.standService.read();     \n    this.modal_Service();      \n  }\n\n  ngAfterViewInit(): void {\n    this.modalService.set_FormGroup(this.fbGroup);\n    this.modalService.set_Form(this.form_);\n  }\n\n  // Default FormGroup\n  default_FormGroup(): void {\n    this.fbGroup = this.fb.group({\n      w_Id: [null],\n      w_JobNumber: [null, [Validators.required]],\n      w_BMinute: [null, [Validators.maxLength(50)]],\n      w_OMinute: [null, [Validators.maxLength(50)]],\n      w_WorkOrder: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(20)])]),\n      w_Model: new FormArray([new FormControl(null, Validators.maxLength(20))]),\n      w_Stand: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(10)])]),\n      w_Quantity: new FormArray([new FormControl(null, [Validators.required, Validators.maxLength(4)])]),\n      w_Remark: new FormArray([new FormControl(null, Validators.maxLength(40))]),\n      w_Date: [null, [Validators.required, Validators.maxLength(20)]],\n      w_BTotal: [null, [Validators.required]],\n      w_OTotal: [null, [Validators.required]],\n      w_BDeduct: [null, [Validators.required]],\n      w_ODeduct: [null, [Validators.required]]\n    });\n  }\n\n  // Modal Service\n  modal_Service(): void {\n    this.modalService.get_modal().subscribe((res: Modal) => this.reset_FormGroup(res.status));\n    this.modalService.get_Search().subscribe(res => this.search(res));\n    this.modalService.get_Create().subscribe(res => this.create(res));\n    this.modalService.get_Read().subscribe(res => this.read());\n    this.modalService.get_Update().subscribe(res => this.update(res));\n    this.modalService.get_Delete().subscribe(res => this.delete(res));\n  }\n\n  // FormGroup Controls Value\n  get fb_Value(): { [key: string]: AbstractControl } {\n    return this.fbGroup.controls;\n  }\n\n  // FormGroup Controls Value By Index\n  get fb_Value_Index(): { [key: number]: string } {\n    return Object.values(this.fbGroup.value) || '';\n  }\n\n  // FormGroup Reset\n  reset_FormGroup(status: string): void {    \n    if(status == 'create')\n    {\n      this.fbGroup.reset(\n        {\n          w_JobNumber: this.user.e_JobNumber,\n          w_BMinute: ',,,',\n          w_OMinute: ',,,',\n          w_BTotal: '0',\n          w_OTotal: '0',\n          w_BDeduct: 70,\n          w_ODeduct: 0,\n          w_Date: new Date().toISOString().slice(0, 10)\n        }\n      );                \n      // Reset FormArray Value\n      this.reset_FormArray();\n    }\n    // Reset ErrorValidators Object\n    Reset_Validators(this.fbGroup);\n  }\n\n  // Reset FormArray\n  reset_FormArray(): void {  \n    Object.keys(this.fbGroup.value).forEach((key, i) => {\n      if(this.fb_Value[key].value instanceof Object)\n      {\n        const validators: Validators = this.fb_Value[key].get('0').validator;        \n        \n        if(key == 'w_Stand')\n        {\n          this.fbGroup.setControl(key, this.fb.array([this.fb.control('40',validators)]));\n        }\n        else if(key == 'w_Quantity')\n        {\n          this.fbGroup.setControl(key, this.fb.array([this.fb.control(1,validators)]));\n        }\n        else\n        {                    \n          this.fbGroup.setControl(key, this.fb.array([this.fb.control('',validators)]));\n        }\n      }\n    });\n  }\n\n  // Update FormArray Value\n  update_FormArray(index: number): void {\n    const array_Name: Array<string> = ['w_WorkOrder','w_Model', 'w_Stand', 'w_Quantity', 'w_Remark'];\n\n    if(index)\n    {\n      for(const name of array_Name)\n      {\n        // Delete Value\n        (<FormArray>this.fb_Value[name]).removeAt(index);\n        // Update FormArray\n        this.fbGroup.setControl(name, this.fb_Value[name]);\n      }\n    }\n    else if(this.fb_Value['w_WorkOrder'].value.length < 5)\n    {\n      for(const name of array_Name)\n      {\n        const validators: Validators = this.fb_Value[name].get('0').validator;  \n        \n        if(name == 'w_Stand')\n        {\n          (<FormArray>this.fb_Value[name]).push(new FormControl('40', validators));\n        }\n        else if(name == 'w_Quantity')\n        {\n          (<FormArray>this.fb_Value[name]).push(new FormControl(0, validators));\n        }\n        else\n        {\n          (<FormArray>this.fb_Value[name]).push(new FormControl('', validators));\n        }\n      }\n    }\n    Reset_Validators(this.fbGroup, index);    \n  }\n\n  // Set FormArray Value\n  set_FormArray(item: WorkHours): void { \n    const array_Name: Array<string> = ['w_WorkOrder','w_Model','w_Stand','w_Quantity','w_Remark'];\n\n    for(const name of array_Name)\n    {      \n      const formArray: FormArray = new FormArray([]);\n      const validators: Validators = this.fb_Value[name].get('0').validator;      \n\n      for(const val of item[name].split(','))\n      {           \n        formArray.push(new FormControl(val, validators));\n      }\n\n      this.fbGroup.setControl(name, formArray);\n    }\n  }\n\n  // User Profile\n  user_Profile(): void {\n\n    let user_Session: Employee | null = this.loginService.read_User_SessionStorage();\n\n    if (user_Session)\n    {      \n        this.user = user_Session;\n    }\n  }\n\n  // Create\n  create(fg: FormGroup): void {\n    if(this.check_Minutes_TotalInt)\n    {\n      this.workHoursService.create(fg.value)\n        .subscribe(\n          {\n            next: (res: boolean) => {\n              if(res)\n              {\n                this.read();\n                this.modalService.set_modal({show: false});\n              }\n              else\n              {\n                this.alertService.set_Alert(22);\n              }\n            },\n            error: (err) => {\n              this.alertService.set_Alert(23);\n            },\n            complete: () => {\n            }\n          }\n        );\n    }\n    else\n    {\n      this.alertService.set_Alert('工時異常');\n    }\n  }\n\n  // Read\n  read(): void {\n    this.workHoursService.read()\n      .subscribe(\n        {\n          next: (res: WorkHours[]) => {\n            if (res.length)\n            {                                         \n              this.result_Data = res;\n              this.result_List = res;\n              this.table_List_Sort();\n              this.refreshResult_List();\n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(13);\n          },\n          complete: () => {\n            this.loadingService.set_Dashboard_Loading(false);\n          }\n        }\n      );\n  }\n\n  // Search\n  search(searchText: string): void {\n    this.result_List = this.result_Data.filter(res => {      \n      const term = searchText.toLowerCase();\n      return res.w_JobNumber.toLowerCase().includes(term)\n          || res.w_Date.toString().toLowerCase().includes(term)\n          || res.e_Name?.toLowerCase().includes(term)\n          || res.s_Code?.toLowerCase().includes(term)\n          || res.s_Title?.toLowerCase().includes(term)\n          || (res.w_WorkOrder.indexOf(term) > -1)\n          || (res.w_Model.indexOf(term) > -1)\n          || (res.w_Stand.indexOf(term) > -1)\n          || (res.w_Remark.indexOf(term) > -1);\n          // || this.decimalPipe.transform(res.w_Date).includes(term);\n    });\n  }\n\n  // Pagination\n  refreshResult_List() {\n    this.result_List = this.result_Data\n    .map((country, i) => ({id: i + 1, ...country}))\n    .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\n  }\n\n  // Table Short\n  table_List_Sort(name: string = 'w_Id', isAsc: boolean = false): void {    \n    this.result_List.sort((a:any, b:any) => {     \n      return (a[name] < b[name] ? -1 : 1) * (isAsc ? 1 : -1);\n    });    \n  }\n\n  // Update\n  update(fg: FormGroup): void {\n    if(this.check_Minutes_TotalInt)\n    {\n      this.workHoursService.create(fg.value)\n        .subscribe(\n          {\n            next: (res: boolean) => {\n              if (res)\n              {\n                this.read();\n                this.modalService.set_modal({show: false});\n              }\n              else\n              {\n                this.alertService.set_Alert(32);\n              }\n            },\n            error: (err) => {\n              this.alertService.set_Alert(33);\n            },\n            complete: () => {\n            }\n          }\n        );\n    }\n    else\n    {\n      this.alertService.set_Alert('工時不可為 0');\n    }\n  }\n\n  // Delete\n  delete(id: number): void {\n    this.workHoursService.delete(id)\n      .subscribe(\n        {\n          next: (res: boolean) => {\n            if (res)\n            {\n              this.read();\n              this.modalService.set_modal({show: false});\n            }\n            else\n            {\n              this.alertService.set_Alert(42);\n            }\n          },\n          error: (err) => {\n            this.alertService.set_Alert(43);\n          }\n        }\n      );\n  }\n\n  // choose\n  choose(item: WorkHours): void {     \n    this.fbGroup.patchValue({\n      w_Id: item.w_Id,\n      w_JobNumber: item.w_JobNumber,\n      w_BMinute: item.w_BMinute,\n      w_OMinute: item.w_OMinute,\n      w_Date: new Date(item.w_Date).toISOString().slice(0, 10),\n      w_BTotal: item.w_BTotal,\n      w_OTotal: item.w_OTotal,\n      w_BDeduct: item.w_BDeduct,\n      w_ODeduct: item.w_ODeduct\n    });\n\n    // FormArray Value\n    this.set_FormArray(item);\n    // Update Modal FormGroup\n    this.modalService.set_FormGroup(this.fbGroup);    \n  }\n\n  // DateTimePick Value Chekc\n  onValue_Check(id: string, index: number): string {\n    let values: string = this.fb_Value[id].value;\n    return values.length > 15 ? values.split(',')[index] : '';\n  }\n\n  // DateTimePick Value\n  onValue(id: string): string {\n\n    let values: any = '';\n\n    switch (id)\n    {\n      case 'SbMinute':    \n        values = this.onValue_Check('w_BMinute', 0);        \n        break;\n      case 'EbMinute':\n        values = this.onValue_Check('w_BMinute', 1);\n        break;\n      case 'SoMinute':\n        values = this.onValue_Check('w_OMinute', 0);\n        break;\n      case 'EoMinute':\n        values = this.onValue_Check('w_OMinute', 1);\n        break;\n    }\n\n    // Create Form Default Value\n    if(!this.fb_Value_Index[0] && !values.length)\n    {\n      if(id == 'SbMinute' || id == 'SoMinute')\n      {\n        const today: string = this.dateTime.slice(0, 11)+'08:00';\n        values = this.datetim_Replace(today);        \n        this.onDate_Check('w_BMinute', values, 0);\n        this.onDate_Check('w_OMinute', values, 0);\n      }\n    }\n\n    values = values.replace(' ', 'T');\n    return values;\n  }\n\n  // DateTime Replace Value\n  datetim_Replace(value: string): string {\n    const timestamp = value.replace('T', ' ');\n    let datetime = timestamp.replace('/','-');\n    return value ? `${datetime}`: '';\n  }\n\n  // Check VALUE\n  onDate_Check(name: string, value: string, index: number): void {    \n    \n    let choose_Value: Array<string> = this.fb_Value[name].value.split(','); \n\n    choose_Value[index] = '';\n    choose_Value[2] = '0';\n    \n    if(value.length)\n    {            \n      // Date Index\n      choose_Value[index] = value;\n      // Total minutes for array index 2\n      choose_Value[2] = this.dateTime_Count(choose_Value, name);\n    }\n\n    // Update Deduct Total\n    let deduct: string = 'w_BDeduct';\n\n    // Update Minutes Total\n    let minutes: string = 'w_BTotal';\n    \n    if(name == 'w_OMinute')\n    {\n      deduct = 'w_ODeduct';\n      minutes = 'w_OTotal';\n    }\n    \n    this.fb_Value[minutes].patchValue(choose_Value[2]);\n    choose_Value[3] = this.fb_Value[deduct].value;\n    // Update FormGroup Controls Value\n    this.fb_Value[name].patchValue(choose_Value.toString());    \n  }\n\n  // DateTimePick Event\n  onDate(event: HTMLInputElement): void {\n\n    const id: string = event.id;\n    // day2.getTime()-day1.getTime();\n    // now.setHours(0,0,0,0);    \n    const value = this.datetim_Replace(event.value);\n    \n    switch (id)\n    {\n      case 'SbMinute':\n        this.onDate_Check('w_BMinute', value, 0);\n        break;\n      case 'EbMinute':\n        this.onDate_Check('w_BMinute', value, 1);\n        break;\n      case 'SoMinute':        \n        this.onDate_Check('w_OMinute', value, 0);        \n        break;\n      case 'EoMinute':\n        this.onDate_Check('w_OMinute', value, 1);\n        break;\n      case 'w_Date':\n        if(value.length)\n        {\n          this.fb_Value[id].patchValue(event.value);\n        }\n        else\n        {\n          this.fb_Value[id].patchValue(new Date().toISOString().slice(0, 10));\n        }\n        break;\n    }      \n  }\n\n  // DataTime Minutes Count\n  dateTime_Count(dateTime_Total: Array<string>, name: string): string {\n\n    let result: string = '0';\n  \n    if(dateTime_Total.toString().length > 36)\n    {            \n      const start: any = new Date(dateTime_Total[0]);\n      const end: any = new Date(dateTime_Total[1]);\n      const total: number = Math.abs(end-start);\n      const days: number = total / (1000 * 3600 * 24);\n      const hours: number = days * 24;\n      let minutes: number = Math.floor(hours * 60);      \n      \n      minutes = (name == 'w_BMinute') ? (minutes - this.fb_Value['w_BDeduct'].value) : (minutes - this.fb_Value['w_ODeduct'].value);\n      result =  (start.getTime() > end.getTime()) ? `-${minutes}` : `${minutes}`;\n    }\n    return result;\n  }\n  \n  // Minutes Total\n  deduct_Change(name: string): void {       \n    // Update Deduct Total\n    let deduct: string = 'w_BDeduct';\n    \n    // Update Minutes Total\n    let minutes: string = 'w_BTotal';\n    \n    if(name == 'w_OMinute')\n    {\n      deduct = 'w_ODeduct';\n      minutes = 'w_OTotal';\n    }\n\n    let dateTime_Total = this.fb_Value[name].value.split(',');\n\n    // Update Minutes Total\n    dateTime_Total[2] = this.dateTime_Count(dateTime_Total, name);   \n    this.fb_Value[minutes].patchValue(dateTime_Total[2]);\n\n    // Update Deduct Total\n    dateTime_Total[3] = this.fb_Value[deduct].value;\n\n    // Update DateTime Total Value\n    this.fb_Value[name].patchValue(dateTime_Total.toString());\n  }\n\n  // Check DateTime Value\n  get check_Minutes_TotalInt(): boolean {\n    const bMinutes: number = this.fb_Value['w_BMinute'].value.length;\n    const oMinutes: number = this.fb_Value['w_OMinute'].value.length;\n    const bTotalInt: number = parseInt(this.fb_Value['w_BTotal'].value);\n    const oTotalInt: number = parseInt(this.fb_Value['w_OTotal'].value);\n    console.log(bMinutes);\n    console.log(oMinutes);\n    console.log(bTotalInt);\n    console.log(oTotalInt);\n    \n    return (bMinutes > 32 && bTotalInt > -1) || (oMinutes > 32 && oTotalInt > -1) ? true : false;\n  }\n\n  // Destroy\n  ngOnDestroy(): void {\n    this.modalService.set_FormGroup(null);\n  }\n\n  // mouse click \n  @HostListener('mouseup', ['$event']) onClick($event) {\n    // this.reset_FormGroup('close');\n\n    // this.modalService.set_modalMDForm(['hide', 'create']);\n\n    // console.info('Click event fired', $event);\n    // if($event.which === 2)\n    // {\n\n    //   console.info('Middle mouse button clicked');\n    // }\n  }\n}\n","<!-- Form -->\n<div class=\"container-lg border border-dark p-2 mt-2 mb-2\">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor, nam.\n</div>\n<!-- /Form -->\n\n<!-- Grid Table -->\n<div class=\"grid-container\" [ngStyle]=\"{'align-items': result_List.length > 5 ? 'stretch':'start'}\">\n  <div class=\"grid-header\">\n    <div>#</div>\n    <div>工號姓名</div>\n    <div>一般工時</div>\n    <div>加班工時</div>\n    <div>工單</div>\n    <div>機種</div>\n    <div>站別</div>\n    <div>數量</div>\n    <div>備註</div>\n    <div>時間</div>\n  </div>\n  <div class=\"grid-body\">\n    <!-- <div class=\"grid-body\"\n    [ngStyle]=\"{'grid-template-rows': result_List.length ? 'repeat('+result_List.length+', 1fr)':'repeat(1, 1fr)'}\"> -->\n    <div class=\"grid-content\" *ngFor=\"let item of result_List; let i = index\" (click)=\"user.e_Lv > 1 && choose(item)\"\n      [ngClass]=\"{'grid-selected': item?.w_Id == fb_Value_Index[0]}\">\n      <div>{{i+1}}</div>\n      <div>\n        <span>\n          {{ item.w_JobNumber }} {{ item.e_Name }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.w_BTotal }}分 | 已扣除{{ item.w_BDeduct }}\n        </span>\n      </div>\n      <div>\n        <span>\n          {{ item.w_OTotal }}分 | 已扣除{{ item.w_ODeduct }}\n        </span>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.w_Quantity.split(','); let y = index\" wn>\n          <span>\n            {{ item.w_WorkOrder | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.w_Quantity.split(','); let y = index\" wn>\n          <span>\n            {{ item.w_Model | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.w_Quantity.split(','); let y = index\">\n          <span>\n            {{ item.w_Stand | splite:y }}\n            <!-- {{ item.w_Stand | splite:y }} {{item.s_Title}} -->\n          </span>\n        </div>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.w_Quantity.split(','); let y = index\">\n          <span>\n            {{ item.w_Quantity | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        <div *ngFor=\"let val of item.w_Quantity.split(','); let y = index\">\n          <span>\n            {{ item.w_Remark | splite:y }}\n          </span>\n        </div>\n      </div>\n      <div>\n        {{ item.w_Date | date: 'yyyy-MM-dd' }}\n      </div>\n    </div>\n  </div>\n</div>\n<!-- <div class=\"table-responsive table-scrollbar\">\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-dark\">\n      <tr align=\"center\">\n        <th scope=\"col\">工號姓名</th>\n        <th scope=\"col\">一般工時</th>\n        <th scope=\"col\">加班工時</th>\n        <th scope=\"col\">工單</th>\n        <th scope=\"col\">機種</th>\n        <th scope=\"col\">站別</th>\n        <th scope=\"col\">數量</th>\n        <th scope=\"col\">備註</th>\n        <th scope=\"col\">時間</th>\n      </tr>\n    </thead>\n    <tbody *ngFor=\"let item of result_List; let i = index\"\n      [ngClass]=\"{'table-selected': item?.w_Id == fb_Value_Index[0], 'more': item.w_WorkOrder.split(',').length}\" (click)=\"user.e_Lv > 1 && choose(item)\">\n      <tr align=\"center\" *ngFor=\"let val of item.w_WorkOrder.split(','); let y = index\">\n        <td [attr.rowspan]=\"y\" [class.d-none]=\"y\" title=\"{{ item.w_JobNumber }} {{ item.e_Name }}\">\n            {{ item.w_JobNumber }} {{ item.e_Name }}\n        </td>\n        <td [attr.rowspan]=\"y\" [class.d-none]=\"y\" [ngClass]=\"[item.w_BTotal < 0 ? 'text-danger':'text-truncate']\" title=\"{{ item.w_BTotal }}分 | 已扣除{{ item.w_BDeduct }}\">\n          {{ item.w_BTotal }}分 | 已扣除{{ item.w_BDeduct }}\n        </td>\n        <td [attr.rowspan]=\"y\" [class.d-none]=\"y\" [ngClass]=\"[item.w_OTotal < 0 ? 'text-danger ':'text-truncate']\" title=\"{{ item.w_OTotal }}分 | 已扣除{{ item.w_ODeduct }}\">\n            {{ item.w_OTotal }}分 | 已扣除{{ item.w_ODeduct }}\n        </td>\n        <td>{{ item.w_WorkOrder | splite:y }}</td>\n        <td>{{ item.w_Model | splite:y }}</td>\n        <td>{{ item.w_Stand | splite:y }} {{item.s_Title}}</td>\n        <td>{{ item.w_Quantity | splite:y }}</td>\n        <td class=\"text-break\">{{ item.w_Remark | splite:y }}</td>\n        <td *ngIf=\"!y\" [attr.rowspan]=\"y\">\n          <span *ngIf=\"!y\">\n            {{ item.w_Date | date: 'yyyy-MM-dd' }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div> -->\n<!-- /Grid Table -->\n\n<!-- Pagination -->\n<div class=\"d-flex justify-content-center pagination pagination-sm mt-2\">\n  <ngb-pagination [collectionSize]=\"result_Data.length\" [(page)]=\"page\" [pageSize]=\"pageSize\" [maxSize]=\"100\"\n    [rotate]=\"true\" [boundaryLinks]=\"true\" (pageChange)=\"refreshResult_List()\"></ngb-pagination>\n</div>\n<!-- /Pagination -->\n\n<ng-template #form_>\n  <!-- Form -->\n  <form [formGroup]=\"fbGroup\" #form=\"ngForm\">\n    <div class=\"form-row pb-1 text-center\">\n      <!-- JobNumber -->\n      <div class=\"input-group input-group-sm col\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text p-1\">工號</span>\n        </div>\n        <input type=\"text\" class=\"form-control form-control-sm text-center\" [value]=\"fb_Value['w_JobNumber'].value\"\n          readonly>\n      </div>\n      <!-- Name -->\n      <div class=\"input-group input-group-sm col\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text p-1\">姓名</span>\n        </div>\n        <input type=\"text\" class=\"form-control form-control-sm text-center\" [value]=\"user.e_Name\" readonly>\n      </div>\n      <!-- Date -->\n      <div class=\"input-group input-group-sm col\">\n        <input type=\"date\" id=\"w_Date\" class=\"form-control form-control-sm text-center\"\n          [value]=\"fb_Value['w_Date'].value\" (input)=\"onDate($event.target)\">\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text p-1\" [class.text-danger]=\"errorValidators['w_Date'].length\">\n            {{ errorValidators['w_Date'].length ? errorValidators['w_Date'] : \"日期\" }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- BMinute -->\n    <div class=\"form-row border border-dark mb-1 pt-1 pb-1\">\n      <!-- BDeduct -->\n      <div class=\"input-group input-group-sm col-md-12 mb-0 d-inline-flex d-flex justify-content-center\">\n        <div class=\"input-group-prepend mb-1\">\n          <span class=\"input-group-text bg-white\">一般工時</span>\n          <!-- Clock Icon -->\n          <i class=\"bi bi-clock input-group-text ml-1 mr-1 bg-white\"></i>\n\n          <span class=\"input-group-text font-weight-bold mr-1\"\n            [class.text-danger]=\"fb_Value['w_BTotal'].value < 0 || errorValidators['w_BTotal'].length\">\n            {{ fb_Value['w_BTotal'].value }}\n          </span>\n          <span class=\"input-group-text font-weight-bold\">-</span>\n        </div>\n\n        <input type=\"number\" id=\"bDeduct\" class=\"form-control form-control-sm col-2\" step=\"5\" min=\"0\" max=\"100\"\n          formControlName=\"w_BDeduct\" (input)=\"deduct_Change('w_BMinute')\">\n      </div>\n      <!-- BMinute Start -->\n      <div class=\"input-group input-group-sm col-md-6\">\n        <input type=\"datetime-local\" id=\"SbMinute\" step=\"3600\" [min]=\"dateTime_Min\" [max]=\"dateTime_Max\"\n          class=\"form-control form-control-sm text-center\" [value]=\"onValue('SbMinute')\" (input)=\"onDate($event.target)\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text p-1\">開始</span>\n        </div>\n      </div>\n      <!-- BMinute End -->\n      <div class=\"input-group input-group-sm col-md-6\">\n        <input type=\"datetime-local\" id=\"EbMinute\" step=\"3600\" [min]=\"dateTime_Min\" [max]=\"dateTime_Max\"\n          class=\"form-control form-control-sm text-center\" [value]=\"onValue('EbMinute')\" (input)=\"onDate($event.target)\">\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text p-1\">結束</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- OMinute -->\n    <div class=\"form-row border border-dark mb-1 pt-1 pb-1\">\n      <!-- ODeduct -->\n      <div class=\"input-group input-group-sm col-md-12 mb-0 d-inline-flex d-flex justify-content-center\">\n        <div class=\"input-group-prepend mb-1\">\n          <span class=\"input-group-text bg-white\">加班工時</span>\n          <!-- Clock Icon -->\n          <i class=\"bi bi-clock input-group-text ml-1 mr-1 bg-white\"></i>\n\n          <span class=\"input-group-text font-weight-bold mr-1\"\n            [class.text-danger]=\"fb_Value['w_OTotal'].value < 0 || errorValidators['w_OTotal'].length\">\n            {{ fb_Value['w_OTotal'].value }}\n          </span>\n          <span class=\"input-group-text font-weight-bold\">-</span>\n        </div>\n\n        <input type=\"number\" id=\"oDeduct\" class=\"form-control form-control-sm col-2\" step=\"5\" min=\"0\" max=\"100\"\n          formControlName=\"w_ODeduct\" (input)=\"deduct_Change('w_OMinute')\">\n      </div>\n\n      <!-- OMinute Start -->\n      <div class=\"input-group input-group-sm col-md-6\">\n        <input type=\"datetime-local\" id=\"SoMinute\" step=\"3600\" [min]=\"dateTime_Min\" [max]=\"dateTime_Max\"\n          class=\"form-control form-control-sm text-center\" [value]=\"onValue('SoMinute')\" (input)=\"onDate($event.target)\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text p-1\">開始</span>\n        </div>\n      </div>\n\n      <!-- OMinute End -->\n      <div class=\"input-group input-group-sm col-md-6\">\n        <input type=\"datetime-local\" id=\"EoMinute\" step=\"3600\" [min]=\"dateTime_Min\" [max]=\"dateTime_Max\"\n          class=\"form-control form-control-sm text-center\" [value]=\"onValue('EoMinute')\" (input)=\"onDate($event.target)\">\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text p-1\">結束</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- FormArray -->\n    <div class=\"form-row border border-dark text-center mb-1\"\n      *ngFor=\"let val of [].constructor(fb_Value['w_WorkOrder'].value.length) let i = index\">\n      <div class=\"form-row col-12 position-relative\">\n        <!-- Icon Btn Group -->\n        <div class=\"form-icon-group\">\n          <!-- Badge Number -->\n          <b class=\"text-dark\">{{i+1}}</b>\n          <!-- Icon Button -->\n          <i [ngClass]=\"['bi', i>0 ? 'text-danger bi-dash-square' : 'text-info bi-plus-square']\"\n            [title]=\"i>0 ? '刪除':'新增'\" (click)=\"update_FormArray(i)\">\n          </i>\n        </div>\n        <!-- workOrder -->\n        <div class=\"form-group col mb-1\" formArrayName=\"w_WorkOrder\">\n          <label [class.text-danger]=\"errorValidators['w_WorkOrder'][i].length && true\">\n            {{ errorValidators['w_WorkOrder'][i].length ? errorValidators['w_WorkOrder'][i] : \"工單\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" [formControlName]=\"i\" placeholder=\"工單\"\n            (blur)=\"inputValidators(fbGroup, 'w_WorkOrder')\">\n        </div>\n        <!-- Model -->\n        <div class=\"form-group col mb-1\" formArrayName=\"w_Model\">\n          <label [class.text-danger]=\"errorValidators['w_Model'][i].length && true\">\n            {{ errorValidators['w_Model'][i].length ? errorValidators['w_Model'][i] : \"機種\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" [formControlName]=\"i\" placeholder=\"機種\"\n            (blur)=\"inputValidators(fbGroup, 'w_Model')\">\n        </div>\n        <!-- Stand -->\n        <div class=\"form-group col mb-1\" formArrayName=\"w_Stand\">\n          <label [class.text-danger]=\"errorValidators['w_Stand'][i].length && true\">\n            {{ errorValidators['w_Stand'][i].length ? errorValidators['w_Stand'][i] : \"站別\" }}\n          </label>\n          <!-- <input class=\"form-control form-control-sm\" [formControlName]=\"i\" [attr.list]=\"'standtOptions'+i\" id=\"stand\"\n          placeholder=\"站別\" (blur)=\"inputValidators(fbGroup, 'w_Stand')\">\n        <datalist [id]=\"'standtOptions'+i\">\n          <option *ngFor=\"let item of standList$ | async; index as i\" [value]=\"item.s_Code\"> {{item.s_Title}}\n        </datalist> -->\n          <select id=\"lv\" class=\"form-control text-center custom-select\" [formControlName]=\"i\"\n            (blur)=\"inputValidators(fbGroup, 'w_Stand')\">\n            <option *ngFor=\"let item of standList$ | async; index as i\" [value]=\"item.s_Code\">\n              {{item.s_Code}} {{item.s_Title}}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-row col-12 text-center\">\n        <!-- Quantity -->\n        <div class=\"form-group col-2 mb-1\" formArrayName=\"w_Quantity\">\n          <label [class.text-danger]=\"errorValidators['w_Quantity'][i].length && true\">\n            {{ errorValidators['w_Quantity'][i].length ? errorValidators['w_Quantity'][i] : \"數量\" }}\n          </label>\n          <input type=\"number\" class=\"form-control form-control-sm text-center\" step=\"1\" min=\"0\" max=\"999\"\n            [formControlName]=\"i\" (blur)=\"inputValidators(fbGroup, 'w_Quantity', i)\">\n        </div>\n        <!-- Remark -->\n        <div class=\"form-group col-10 mb-1\" formArrayName=\"w_Remark\">\n          <label [class.text-danger]=\"errorValidators['w_Remark'][i].length && true\">\n            {{ errorValidators['w_Remark'][i] ? errorValidators['w_Remark'][i] : \"備註\" }}\n          </label>\n          <input type=\"text\" class=\"form-control form-control-sm text-center\" [formControlName]=\"i\" placeholder=\"備註\"\n            (blur)=\"inputValidators(fbGroup, 'w_Remark')\">\n        </div>\n      </div>\n    </div>\n  </form>\n  <!-- /Form -->\n</ng-template>","const url_Server: string = 'http://localhost:3000';\n\nexport const Urls = {\n    login: {\n        login:`${url_Server}/api/login`,\n        email:`${url_Server}/api/login/email`,\n        update:`${url_Server}/api/login/update`,\n    },\n    employee: {\n        read:`${url_Server}/api/employee/read`,\n        findOne:`${url_Server}/api/employee/find/one`,\n        findLike:`${url_Server}/api/employee/find/like`,\n        create:`${url_Server}/api/employee/create`,\n        update:`${url_Server}/api/employee/update`,\n        updatePassword:`${url_Server}/api/employee/update/password`,\n        concat:`${url_Server}/api/employee/concat`,\n        replace:`${url_Server}/api/employee/replace`,\n        delete:`${url_Server}/api/employee/delete`,\n        email:`${url_Server}/api/employee/email`,\n    },\n    workHours: {\n        read:`${url_Server}/api/workHours/read`,\n        findOne:`${url_Server}/api/workHours/find/one`,\n        findLike:`${url_Server}/api/workHours/find/like`,\n        create:`${url_Server}/api/workHours/create`,\n        update:`${url_Server}/api/workHours/update`,\n        delete:`${url_Server}/api/workHours/delete`,\n    },\n    repair: {\n        read:`${url_Server}/api/repair/read`,\n        findOne:`${url_Server}/api/repair/find/one`,\n        findLike:`${url_Server}/api/repair/find/like`,\n        create:`${url_Server}/api/repair/create`,\n        update:`${url_Server}/api/repair/update`,\n        delete:`${url_Server}/api/repair/delete`,\n    },\n    stand: {\n        read:`${url_Server}/api/stand/read`,\n        create:`${url_Server}/api/stand/create`,\n        update:`${url_Server}/api/stand/update`,\n        delete:`${url_Server}/api/stand/delete`,\n    },\n    rma: {\n        read:`${url_Server}/api/rma/read`,\n        findOne:`${url_Server}/api/rma/find/one`,\n        findLike:`${url_Server}/api/rma/find/like`,\n        create:`${url_Server}/api/rma/create`,\n        update:`${url_Server}/api/rma/update`,\n        delete:`${url_Server}/api/rma/delete`,\n    },\n    recycle: {\n        read:`${url_Server}/api/recycle/read`,\n        create:`${url_Server}/api/recycle/create`,\n        delete:`${url_Server}/api/recycle/delete`,\n    },\n    ip: 'http://api.ipify.org/?format=json'\n};","import {Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAlerts]'\n})\nexport class AlertsDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n\n      \n        if ([401, 403, 404].indexOf(err.status) !== -1) {\n            // this.authenticationService.logout();\n\n            console.log('error');\n            \n            // location.reload();\n        }\n\n        const error = err.error.message || err.statusText;\n        return throwError(() => error);\n    }));\n  }\n}\n","import { AbstractControl, FormArray, FormControl, FormGroup, ValidationErrors } from \"@angular/forms\";\n/**\n * ErrorValidators\n *\n * Class ex:\n * \n * [class.text-danger]=\"errorValidators['w_WorkOrder'][i].length\"\n * \n * Html ex:\n * \n * {{errorValidators['w_WorkOrder'][i]}}\n */\nexport let ErrorValidators: {[key: string]: any} = {};\n/**\n * Reset_Validators(FormGroup, index)\n * \n * Type FormGroup\n * \n * Type number or null for FormArray Reomve index\n */\nexport const Reset_Validators = (fbGroup: FormGroup, index: any = null): void => {\n\n\t// console.log(Object.keys(ErrorValidators).length);\n\t// console.log(Object.keys(fbGroup.value).length);\n\t\n\tObject.keys(fbGroup.controls).forEach((key: any, num: number) => {\t\t\n\t\t// FormArray\n\t\tif(fbGroup.controls[key] instanceof FormArray)\n\t\t{\t\t\t\n\t\t\tconst fbArray: FormArray = <FormArray>fbGroup.controls[key];\n\t\t\t\n\t\t\tif(ErrorValidators[key] === undefined)\n\t\t\t{\n\t\t\t\tErrorValidators[key] = [];\n\n\t\t\t\tfor(let i=0; i<fbArray.length; i++)\n\t\t\t\t{\t\t\t\t\t\t\n\t\t\t\t\tErrorValidators[key].push('');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(fbArray.length > ErrorValidators[key].length)\n\t\t\t{\t\t\t\n\t\t\t\tfor(let i=ErrorValidators[key].length; i<fbArray.length; i++)\n\t\t\t\t{\t\t\t\t\t\t\n\t\t\t\t\tErrorValidators[key].push('');\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\telse if(index && (fbArray.length < ErrorValidators[key].length))\n\t\t\t{\n\t\t\t\tErrorValidators[key].splice(index, 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tErrorValidators[key] = '';\n\t\t}  \n\t});\n\n\t// Delete Others Key When router Active\n\t// if(Object.keys(ErrorValidators).length != Object.keys(fbGroup.value).length)\n\t// {\t\t\t\n\t// \tfor (const key in ErrorValidators)\n\t// \t{\n\t// \t\tif(fbGroup.value[key] === undefined)\n\t// \t\t{\n\n\t// \t\t\tconsole.log(key);\n\t\t\t\t\n\t// \t\t\t// delete ErrorValidators[key];\n\t// \t\t}\t\t\t\n\t// \t}\n\t// }\n\n\n\t// console.log(fbGroup.value);\n}\n/**\n * Input (onBlur)=\"InputValidators(FormGroup, Controls Name, index)\"\n * \n * Type FormGroup\n * \n * Type String FormControl Name\n * \n * Type Number For FormArray By Index Value\n */\nexport const InputValidators = (fbGroup: FormGroup, key: string = ''): any => {\n\t\n\tif(key.length && fbGroup.controls[key].touched)\n\t{\n\t\tif(fbGroup.controls[key] instanceof FormControl)\n\t\t{\t\t\t\n\t\t\tconst errorKey: ValidationErrors = fbGroup.controls[key].errors; \n\t\t\tconst otherErrorKey: boolean = fbGroup.hasError('passWordMatch');\n\n\t\t\tErrorValidators[key] = '';\n\n\t\t\tif(errorKey)\n\t\t\t{        \n\t\t\t\tif(errorKey.required)\n\t\t\t\t{\n\t\t\t\t\tErrorValidators[key] = '未輸入';\n\t\t\t\t}\n\t\t\t\telse if(errorKey.pattern)\n\t\t\t\t{\n\t\t\t\t\tErrorValidators[key] = '格式錯';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tErrorValidators[key] = '異常';\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\telse if(otherErrorKey && key == 'e_ConfirmPassword')\n\t\t\t{\n\t\t\t\tErrorValidators[key] = '密碼不符';            \n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// FormArray\n\t\t\tconst fbArray: FormArray = <FormArray>fbGroup.controls[key];\n\n\t\t\tfor(const i in fbArray.controls)\n\t\t\t{\n\t\t\t\t// FormArray\n\t\t\t\tconst fbControls: AbstractControl = fbArray.controls[i];\n\n\t\t\t\tif(fbControls.touched)\n\t\t\t\t{\n\t\t\t\t\tErrorValidators[key][i] = '';\n\n\t\t\t\t\tif(key != 'e_Date' && fbArray.valid)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst values: string = fbControls.value.toString();\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst replaceVal: string = values.replace(/[\\,\\][\\!\\|\\~\\`\\(\\)\\#\\@\\%\\+\\=\\/\\'\\$\\%\\^\\&\\*\\{\\}\\:\\;\\\"\\L\\<\\>\\?\\\\]/g, '');\n\t\t\t\t\t\tfbControls.patchValue(replaceVal);\n\t\t\t\t\t}\t\t\t\t\t\t\n\n\t\t\t\t\t// Error Key\n\t\t\t\t\tconst errorKey: ValidationErrors = fbControls.errors; \n\t\t\t\t\t\n\t\t\t\t\tif(errorKey)\n\t\t\t\t\t{           \t\t\n\t\t\t\t\t\tif(errorKey.required)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tErrorValidators[key][i] = '未輸入';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(errorKey.pattern)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tErrorValidators[key][i] = '格式錯';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tErrorValidators[key][i] = '異常';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t}\n\t}\n\treturn ErrorValidators[key];\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport const passwordMatchValidator: ValidatorFn = (controls: AbstractControl): ValidationErrors | null => {\n    // const validator: object | null = controls.get('e_PassWord')?.validator({} as AbstractControl);\n    // console.log(Object.keys(validator).length);\n\n    if(controls.get('e_Id').value)\n    {\n        // controls.get('e_PassWord').clearValidators();\n        // controls.get('e_PassWord').updateValueAndValidity();\n        // controls.get('e_ConfirmPassword').clearValidators();\n        // controls.get('e_ConfirmPassword').updateValueAndValidity();\n        return null;\n    }\n\n    const password = controls.get('e_PassWord').value;    \n    const confirmPassword = controls.get('e_ConfirmPassword').value;\n    return (password && confirmPassword) && (password === confirmPassword) ? null : {passWordMatch: true};\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'splite'\n})\nexport class SplitePipe implements PipeTransform {\n  transform(value: string, index: number): string {        \n    const result = value.split(',');\n    return result[index];\n  }\n}\n","import { ComponentFactoryResolver, Injectable, ViewChild } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AlertComponent } from '../components/alert/alert.component';\nimport { AlertsDirective } from '../directives/alerts.directive';\nimport { Alerts } from '../interfaces/alerts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  // @ViewChild(AlertsDirective) alerts: AlertsDirective;\n  private alerts: Subject<Alerts>;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n    this.alerts = new Subject<Alerts>();\n  }\n\n  // Get Alert\n  public get_Alert(): Observable<Alerts> {     \n    this.alerts.next({\n      status: false,\n      type: 'danger',\n      message: '...'});    \n    return this.alerts.asObservable();\n  }\n\n  /*\n  * Set Alert\n  *\n  * 11 create ok\n  * 12 create ng\n  * 13 create err\n  * \n  * 21 Read ok\n  * 22 Read ng\n  * 23 Read err\n  * \n  * 31 upddte ok\n  * 32 update ng\n  * 33 update err\n  * \n  * 41 delete ok\n  * 42 delete ng\n  * 43 delete err\n  *\n  */\n  public set_Alert(status: any): void {    \n\n    switch(status)\n    {\n      case 11:\n        this.alerts.next(\n          {\n            status: false,\n            type: 'success',\n            message: '載入成功'\n          }\n        );\n        break;\n      case 12:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'warning',\n            message: '載入失敗'\n          }\n        );\n        break;\n      case 13:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'danger',\n            message: '載入失敗，系統異常'\n          }\n        );\n        break;\n      case 21:\n        this.alerts.next(\n          {\n            status: false,\n            type: 'success',\n            message: '新增成功'\n          }\n        );\n        break;\n      case 22:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'warning',\n            message: '新增失敗，是否資料重複'\n          }\n        );\n        break;\n      case 23:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'danger',\n            message: '新增失敗，系統異常'\n          }\n        );\n        break;\n      case 31:\n        this.alerts.next(\n          {\n            status: false,\n            type: 'success',\n            message: '更新成功'\n          }\n        );\n        break;\n      case 32:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'warning',\n            message: '更新失敗，是否資料重複'\n          }\n        );\n        break;\n      case 33:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'danger',\n            message: '更新失敗，系統異常'\n          }\n        );\n        break;\n      case 41:\n        this.alerts.next(\n          {\n            status: false,\n            type: 'success',\n            message: '刪除成功'\n          }\n        );\n        break;\n      case 42:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'warning',\n            message: '刪除失敗'\n          }\n        );\n        break;\n      case 43:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'danger',\n            message: '刪除失敗，系統異常'\n          }\n        );\n        break;\n      default:\n        this.alerts.next(\n          {\n            status: true,\n            type: 'warning',\n            message: status\n          }\n        );\n        break;\n    }\n\n    // Close Alert\n    setTimeout(() => {\n      this.clear_Alert();\n    }, 5000);\n  }\n\n  // Clear Alert\n  public clear_Alert(): void {   \n    this.alerts.next(\n      {\n        status: false,\n        type: 'light',\n        message: '...'\n      }\n    )\n  }\n\n  // show(): void {\n  //   const alertComponent = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n  //   this.alerts.viewContainerRef.clear();\n  //   const componentRef = this.alerts.viewContainerRef.createComponent(alertComponent);\n  //   componentRef.instance.messages = 'Nigo Chen';\n  //   componentRef.instance.status = false;\n  // }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { Urls } from './../configs/url.config';\nimport { Employee } from './../interfaces/employee';\n\n@Injectable()\n\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n  \n  private handleError(errorResponse: HttpErrorResponse)\n  {\n    // catchError\n    let message:string = '';\n\n    if (errorResponse.error instanceof ErrorEvent)\n    {\n      message = 'Clinet Error';\n    }\n    else\n    {\n      message = 'Server Error';\n    }\n    // callback to subscribe error\n    return throwError(() => message); \n  }\n\n  // Read\n  public read(): Observable<Employee[]>\n  {\n    return this.http.get<Employee[]>(Urls.employee.read)\n    .pipe(map(res => {\n      if(typeof res !== \"object\")\n      {\n        return [];\n      }\n      return res;\n    }),shareReplay(1),catchError(this.handleError));\n  }\n\n  // Find One\n  public findOne(user: object): Observable<Employee[]>\n  { \n    const jString = JSON.stringify(user);\n    return this.http.get<Employee[]>(`${Urls.employee.findOne}/${jString}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Find Like\n  public findLike(employee: string): Observable<Employee[]>\n  { \n    return this.http.get<Employee[]>(`${Urls.employee.findLike}/${employee}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Create\n  public create(employee: Employee): Observable<boolean>\n  {        \n    return this.http.post<boolean>(Urls.employee.create, employee)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Update\n  public update(employee: Employee): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.employee.update, employee)\n    .pipe(catchError(this.handleError));\n  }\n  \n  // concat\n  public concat(employee: Employee): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.employee.concat, employee)\n    .pipe(catchError(this.handleError));\n  }\n  // Replace\n  public replace(employee: Employee): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.employee.replace, employee)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Delete\n  public delete(id: number): Observable<boolean>\n  {    \n    return this.http.delete<boolean>(`${Urls.employee.delete}/${id}`)\n    .pipe(catchError(this.handleError))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  private app_Loading: Subject<boolean>;\n  private dashboard_Loading: Subject<boolean>;\n  private is_Login: Subject<boolean>;\n\n  constructor(){\n    this.app_Loading = new Subject<boolean>();\n    this.dashboard_Loading = new Subject<boolean>();\n    this.is_Login = new Subject<boolean>();\n  }\n\n  set_App_Loading(value: boolean): void {\n    if(value)\n    {\n      this.app_Loading.next(value);\n    }\n    else\n    {\n      setTimeout(() => {\n        this.app_Loading.next(value);\n      }, 600);\n    }\n  }\n\n  get_App_Loading(): Observable<boolean> {\n    return this.app_Loading.asObservable();\n  }\n  \n  set_Dashboard_Loading(value: boolean): void {\n    if(value)\n    {\n      this.dashboard_Loading.next(value);\n    }\n    else\n    {\n      setTimeout(() => {\n        this.dashboard_Loading.next(value);\n      }, 600);\n    }\n  }\n\n  get_Dashboard_Loading(): Observable<any> {\n    return this.dashboard_Loading.asObservable();\n  }\n\n  set_Login(value: boolean): void {\n    setTimeout(() => {\n      this.is_Login.next(value);\n    }, 2000);\n  }\n\n  get_Login(): Observable<any> {\n    return this.is_Login.asObservable();\n  }\n  \n  clear_Loading(): void {\n    this.app_Loading.next();\n    this.dashboard_Loading.next();\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Urls } from '../configs/url.config';\nimport { Employee } from '../interfaces/employee';\nimport { LoadingService } from './loading.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  constructor(private http: HttpClient, private loadingService: LoadingService) {}\n\n  private handleError(errorResponse: HttpErrorResponse)\n  {\n    // catchError\n    const message: string = errorResponse.error instanceof ErrorEvent ? 'Clinet Error' : 'Server Error';\n    // callback to subscribe error\n    return throwError(() => message); \n  }\n\n  // Login\n  public login(user: object): Observable<boolean> {    \n    return this.http.post<Employee[]>(Urls.login.login, user)\n      .pipe(map((res: Employee[]) => {\n        if(res.length)\n        {\n          this.create_User_SessionStorage(res[0]);\n          return true;\n        }        \n        return false;\n      }), catchError(this.handleError));\n  }\n\n  // Update Password\n  public update(user: object): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.login.update, user)\n    .pipe(catchError(this.handleError));\n  }\n\n  // logout\n  public logout(): void {\n    this.loadingService.set_Dashboard_Loading(true);\n    this.delete_Time_SessionStorage();\n    this.delete_User_SessionStorage();\n  }\n\n  // Send Email For User\n  public send_Email(user: object): Observable<boolean> {\n    return this.http.post<boolean>(Urls.login.email, user)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Create Time 5 minutes sessionStorage  \n  public create_Time_SessionStorage(): void {\n    const date_ = new Date();\n    date_.setMinutes(date_.getMinutes() + 5);\n    const time_ = date_.getTime().toString();   \n    sessionStorage.setItem('time', btoa(time_));\n  }\n\n  // Read Time sessionStorage\n  public read_Time_SessionStorage(): number {\n\n    let time_: any = sessionStorage.getItem('time');\n\n    if(time_ != null)\n    {\n      const now_date = new Date().getTime();\n\n      time_ = parseInt(atob(time_));\n\n      if(time_ > now_date)\n      {                \n        const date_: number = (new Date(time_).getTime() - new Date().getTime());\n\n        // var hours = Math.floor(diff / 1000 / 60 / 60);\n        // diff -= hours * 1000 * 60 * 60;\n        const minutes = Math.floor(date_ / 1000 / 60);\n        // diff -= minutes * 1000 * 60;\n        // var seconds = Math.floor(diff / 1000);\n        return minutes;\n      }\n    }\n\n    this.delete_Time_SessionStorage();\n    return 0;\n  }\n  \n  // Delete Time sessionStorage\n  private delete_Time_SessionStorage(): void {\n    sessionStorage.removeItem('time');\n  }\n\n  // Create IP LocalStorage\n  public user_Ip(): Observable<string> {\n    return this.http.get<string>(Urls.ip)\n    .pipe(map((data:any) => {\n\n      if('ip' in data)\n      {\n        return data.ip;\n      }\n\n      return '';\n    }),\n    catchError(this.handleError));\n  }\n  \n  // Create User sessionStorage\n  public create_User_SessionStorage(employee: Employee): void {    \n    const old_User: Employee | null = this.read_User_SessionStorage();\n    \n    delete employee.e_PassWord;\n\n    if(old_User != null)\n    {\n        if((old_User.e_Name != employee.e_Name) || (old_User.e_Lv != employee.e_Lv))\n        {\n          setTimeout(() => {\n            window.location.reload();\n          }, 1200);\n        }\n    }\n    sessionStorage.setItem('user', btoa(JSON.stringify(employee)));\n  }\n\n  // Read User SessionStorage\n  public read_User_SessionStorage(): Employee | null {\n    const user = sessionStorage.getItem('user');\n    return user && JSON.parse(atob(user)); \n  }\n\n  // Delete SessionStorage\n  public delete_User_SessionStorage(): void {\n    sessionStorage.removeItem('user');\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { Employee } from '../interfaces/employee';\nimport { Modal } from '../interfaces/modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private modal: Subject<Modal>;\n  private fbGroup: Subject<FormGroup>;\n  private form: Subject<TemplateRef<any>>;\n  private update: Subject<FormGroup>;\n  private create: Subject<FormGroup>;\n  private read: Subject<boolean>;\n  private delete: Subject<number>;\n  private search: Subject<string>;\n  private user_Profile: Subject<Employee>;\n\n  constructor() {\n    this.modal = new Subject<Modal>();\n    this.fbGroup = new Subject<FormGroup>();\n    this.form = new Subject<TemplateRef<HTMLElement>>();\n    this.update = new Subject<FormGroup>();\n    this.create = new Subject<FormGroup>();\n    this.read = new Subject<boolean>();\n    this.delete = new Subject<number>();\n    this.search = new Subject<string>();\n    this.user_Profile = new Subject<Employee>();\n  }\n\n  public get_modal(): Observable<Modal> {\n    return this.modal.asObservable();\n  }\n\n  public set_modal(value: Modal): void {\n    this.modal.next(value);\n  }\n\n  // Get FormGroup\n  public get_FormGroup(): Observable<FormGroup> {    \n    return this.fbGroup.asObservable();\n  }\n  \n  // Set FormGroup\n  public set_FormGroup(formGroup: FormGroup): void {    \n    this.fbGroup.next(formGroup);\n  }\n\n  // Get Form\n  public get_Form(): Observable<TemplateRef<any>> {    \n    return this.form.asObservable();\n  }\n  \n  // Set Form\n  public set_Form(templateRef: TemplateRef<any>): void {    \n    this.form.next(templateRef);\n  }\n  \n  // Get Update\n  public get_Update(): Observable<FormGroup> {    \n    return this.update.asObservable();\n  }\n\n  // Set Update\n  public set_Update(fg: FormGroup): void {    \n    this.update.next(fg);\n  }\n  \n  // Get Create\n  public get_Create(): Observable<FormGroup> {    \n    return this.create.asObservable();\n  }\n\n  // Set Create\n  public set_Create(fg: FormGroup): void {    \n    this.create.next(fg);\n  }\n\n  // Get Read\n  public get_Read(): Observable<boolean> {    \n    return this.read.asObservable();\n  }\n\n  // Set Read\n  public set_Read(status: boolean): void {    \n    this.read.next(status);\n  }\n\n  // Get Read\n  public get_Delete(): Observable<number> {    \n    return this.delete.asObservable();\n  }\n\n  // Set Read\n  public set_Delete(id: number): void {    \n    this.delete.next(id);\n  }\n\n  // Get Read\n  public get_Search(): Observable<string> {    \n    return this.search.asObservable();\n  }\n\n  // Set Read\n  public set_Search(searchText: string): void {    \n    this.search.next(searchText);\n  }\n  \n  // Get Read\n  public get_User_Profile(): Observable<Employee> {    \n    return this.user_Profile.asObservable();\n  }\n\n  // Set Read\n  public set_User_Profile(user: Employee): void {    \n    this.user_Profile.next(user);\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { Urls } from '../configs/url.config';\nimport { Repair } from '../interfaces/repair';\n\n@Injectable()\n\nexport class RepairService {\n\n  constructor(private http: HttpClient) { }\n  \n  private handleError(errorResponse: HttpErrorResponse)\n  {\n    // catchError\n    let message:string = '';\n\n    if (errorResponse.error instanceof ErrorEvent)\n    {\n      message = 'Clinet Error';\n    }\n    else\n    {\n      message = 'Server Error';\n    }\n    // callback to subscribe error\n    return throwError(() => message); \n  }\n\n  // Read\n  public read(): Observable<Repair[]>\n  {\n    return this.http.get<Repair[]>(Urls.repair.read)\n    .pipe(map(res => {\n      if(typeof res !== \"object\")\n      {\n        return [];\n      }\n      return res;\n    }),shareReplay(1),catchError(this.handleError));\n  }\n\n  // Find One\n  public findOne(user: object): Observable<Repair[]>\n  { \n    const jString = JSON.stringify(user);\n    return this.http.get<Repair[]>(`${Urls.repair.findOne}/${jString}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Find Like\n  public findLike(repair: string): Observable<Repair[]>\n  { \n    return this.http.get<Repair[]>(`${Urls.repair.findLike}/${repair}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Create\n  public create(repair: Repair): Observable<boolean>\n  {        \n    return this.http.post<boolean>(Urls.repair.create, repair)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Update\n  public update(repair: Repair): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.repair.update, repair)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Delete\n  public delete(id: number): Observable<boolean>\n  {    \n    return this.http.delete<boolean>(`${Urls.repair.delete}/${id}`)\n    .pipe(catchError(this.handleError))\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { Stand } from '../interfaces/stand';\nimport { Urls } from './../configs/url.config';\n\n@Injectable()\n\nexport class StandService {\n\n  constructor(private http: HttpClient) { }\n  \n  private handleError(errorResponse: HttpErrorResponse)\n  {\n    // catchError\n    let message:string = '';\n\n    if (errorResponse.error instanceof ErrorEvent)\n    {\n      message = 'Clinet Error';\n    }\n    else\n    {\n      message = 'Server Error';\n    }\n    // callback to subscribe error\n    return throwError(() => message); \n  }\n\n  // Read\n  public read(): Observable<Stand[]>\n  {\n    return this.http.get<Stand[]>(Urls.stand.read)\n    .pipe(map(res => {\n      if(typeof res !== \"object\")\n      {\n        return [];\n      }\n      return res;\n    }),shareReplay(1),catchError(this.handleError));\n  }\n\n  // Create\n  public create(Stand: Stand): Observable<boolean>\n  {        \n    return this.http.post<boolean>(Urls.stand.create, Stand)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Update\n  public update(Stand: Stand): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.stand.update, Stand)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Delete\n  public delete(id: number): Observable<boolean>\n  {    \n    return this.http.delete<boolean>(`${Urls.stand.delete}/${id}`)\n    .pipe(catchError(this.handleError))\n  }\n}\n  ","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { WorkHours } from '../interfaces/work-hours';\nimport { Urls } from './../configs/url.config';\n\n@Injectable()\n\nexport class WorkHoursService {\n\n  constructor(private http: HttpClient) { }\n  \n  private handleError(errorResponse: HttpErrorResponse)\n  {\n    // catchError\n    let message:string = '';\n\n    if (errorResponse.error instanceof ErrorEvent)\n    {\n      message = 'Clinet Error';\n    }\n    else\n    {\n      message = 'Server Error';\n    }\n    // callback to subscribe error\n    return throwError(() => message); \n  }\n\n  // Read\n  public read(): Observable<WorkHours[]>\n  {\n    return this.http.get<WorkHours[]>(Urls.workHours.read)\n    .pipe(map(res => {\n      if(typeof res !== \"object\")\n      {\n        return [];\n      }\n      return res;\n    }),shareReplay(1),catchError(this.handleError));\n  }\n\n  // Find One\n  public findOne(user: object): Observable<WorkHours[]>\n  { \n    const jString = JSON.stringify(user);\n    return this.http.get<WorkHours[]>(`${Urls.workHours.findOne}/${jString}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Find Like\n  public findLike(workHours: string): Observable<WorkHours[]>\n  { \n    return this.http.get<WorkHours[]>(`${Urls.workHours.findLike}/${workHours}`)\n   .pipe(catchError(this.handleError));\n  }\n\n  // Create\n  public create(workHours: WorkHours): Observable<boolean>\n  {        \n    return this.http.post<boolean>(Urls.workHours.create, workHours)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Update\n  public update(workHours: WorkHours): Observable<boolean>\n  {        \n    return this.http.put<boolean>(Urls.workHours.update, workHours)\n    .pipe(catchError(this.handleError));\n  }\n\n  // Delete\n  public delete(id: number): Observable<boolean>\n  {    \n    return this.http.delete<boolean>(`${Urls.workHours.delete}/${id}`)\n    .pipe(catchError(this.handleError))\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { BootstrapModule } from '../bootstrap/bootstrap.module';\nimport { LoadingComponent } from '../components/loading/loading.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlertComponent } from '../components/alert/alert.component';\nimport { AlertsDirective } from '../directives/alerts.directive';\nimport { BootstrapModule } from '../bootstrap/bootstrap.module';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from '../helps/error.interceptor';\n\n@NgModule({\n  declarations: [\n    LoadingComponent,    \n    AlertComponent,\n    AlertsDirective,\n  ],\n  imports: [\n    CommonModule,\n    NgbModule,\n    ReactiveFormsModule,\n    // HttpClientModule,\n    FormsModule,\n    BootstrapModule,\n  ],\n  exports: [\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BootstrapModule,\n    LoadingComponent,\n    AlertComponent,\n    AlertsDirective,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n})\nexport class ShardModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}